// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig_ethernet.proto

package opi_api.network.v1alpha1;

public interface EthernetIfOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.v1alpha1.EthernetIf)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Ethernet Interface Configuration settings
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetConfig config = 1;</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <pre>
   * Ethernet Interface Configuration settings
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetConfig config = 1;</code>
   * @return The config.
   */
  opi_api.network.v1alpha1.EthernetConfig getConfig();
  /**
   * <pre>
   * Ethernet Interface Configuration settings
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetConfig config = 1;</code>
   */
  opi_api.network.v1alpha1.EthernetConfigOrBuilder getConfigOrBuilder();

  /**
   * <pre>
   * Ethernet Interface State information
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetState state = 2;</code>
   * @return Whether the state field is set.
   */
  boolean hasState();
  /**
   * <pre>
   * Ethernet Interface State information
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetState state = 2;</code>
   * @return The state.
   */
  opi_api.network.v1alpha1.EthernetState getState();
  /**
   * <pre>
   * Ethernet Interface State information
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetState state = 2;</code>
   */
  opi_api.network.v1alpha1.EthernetStateOrBuilder getStateOrBuilder();

  /**
   * <pre>
   * Switched VLAN Interface configuration for interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.VlanSwitchedIf switched_vlan = 3;</code>
   * @return Whether the switchedVlan field is set.
   */
  boolean hasSwitchedVlan();
  /**
   * <pre>
   * Switched VLAN Interface configuration for interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.VlanSwitchedIf switched_vlan = 3;</code>
   * @return The switchedVlan.
   */
  opi_api.network.v1alpha1.VlanSwitchedIf getSwitchedVlan();
  /**
   * <pre>
   * Switched VLAN Interface configuration for interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.VlanSwitchedIf switched_vlan = 3;</code>
   */
  opi_api.network.v1alpha1.VlanSwitchedIfOrBuilder getSwitchedVlanOrBuilder();
}
