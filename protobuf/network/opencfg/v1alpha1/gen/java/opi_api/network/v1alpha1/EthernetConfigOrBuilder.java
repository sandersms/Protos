// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig_ethernet.proto

package opi_api.network.v1alpha1;

public interface EthernetConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.v1alpha1.EthernetConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * MAC address to assign to the Ethernet Interface if not assigned
   * </pre>
   *
   * <code>string mac_address = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The macAddress.
   */
  java.lang.String getMacAddress();
  /**
   * <pre>
   * MAC address to assign to the Ethernet Interface if not assigned
   * </pre>
   *
   * <code>string mac_address = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for macAddress.
   */
  com.google.protobuf.ByteString
      getMacAddressBytes();

  /**
   * <pre>
   * Set to TRUE to request autonegotiate the transmission parameters 
   * with the peer interface
   * </pre>
   *
   * <code>bool auto_negotiate = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The autoNegotiate.
   */
  boolean getAutoNegotiate();

  /**
   * <pre>
   * Used when full autonegotiation is not desired by setting to TRUE
   * and setting auto_negotiate to FALSE.  It is ignored when auto-negotiate
   * is set to TRUE.
   * </pre>
   *
   * <code>bool standalone_link_training = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The standaloneLinkTraining.
   */
  boolean getStandaloneLinkTraining();

  /**
   * <pre>
   * Optionally sets the duplex mode that is advertised to the peer interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthDuplexMode duplex_mode = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The enum numeric value on the wire for duplexMode.
   */
  int getDuplexModeValue();
  /**
   * <pre>
   * Optionally sets the duplex mode that is advertised to the peer interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthDuplexMode duplex_mode = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The duplexMode.
   */
  opi_api.network.v1alpha1.EthDuplexMode getDuplexMode();

  /**
   * <pre>
   * Optionally sets the port speed that is advertised to the peer interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthPortSpeed port_speed = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The enum numeric value on the wire for portSpeed.
   */
  int getPortSpeedValue();
  /**
   * <pre>
   * Optionally sets the port speed that is advertised to the peer interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthPortSpeed port_speed = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The portSpeed.
   */
  opi_api.network.v1alpha1.EthPortSpeed getPortSpeed();

  /**
   * <pre>
   * Override for the negotiated flow control on the interface
   * </pre>
   *
   * <code>bool enable_flow_control = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The enableFlowControl.
   */
  boolean getEnableFlowControl();

  /**
   * <pre>
   * FEC applied to the physical channel of the interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthFecMode fec_mode = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The enum numeric value on the wire for fecMode.
   */
  int getFecModeValue();
  /**
   * <pre>
   * FEC applied to the physical channel of the interface
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthFecMode fec_mode = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The fecMode.
   */
  opi_api.network.v1alpha1.EthFecMode getFecMode();
}
