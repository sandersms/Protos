// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig_ethernet.proto

package opi_api.network.v1alpha1;

/**
 * <pre>
 * Ethernet Interface Counters
 * </pre>
 *
 * Protobuf type {@code opi_api.network.v1alpha1.EthernetCounters}
 */
public final class EthernetCounters extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.network.v1alpha1.EthernetCounters)
    EthernetCountersOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EthernetCounters.newBuilder() to construct.
  private EthernetCounters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EthernetCounters() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EthernetCounters();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EthernetCounters(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            rxMacControlFrames_ = input.readUInt64();
            break;
          }
          case 16: {

            rxMacPauseFrames_ = input.readUInt64();
            break;
          }
          case 24: {

            rxOversizeFrames_ = input.readUInt64();
            break;
          }
          case 32: {

            rxUndersizeFrames_ = input.readUInt64();
            break;
          }
          case 40: {

            rxJabberFrames_ = input.readUInt64();
            break;
          }
          case 48: {

            rxFragmentFrames_ = input.readUInt64();
            break;
          }
          case 56: {

            rxIeee8021QFrames_ = input.readUInt64();
            break;
          }
          case 64: {

            rxCrcErrors_ = input.readUInt64();
            break;
          }
          case 72: {

            rxBlockErrors_ = input.readUInt64();
            break;
          }
          case 80: {

            rxCarrierErrors_ = input.readUInt64();
            break;
          }
          case 88: {

            rxInterruptedTx_ = input.readUInt64();
            break;
          }
          case 96: {

            rxLateCollision_ = input.readUInt64();
            break;
          }
          case 104: {

            rxMacErrorsRx_ = input.readUInt64();
            break;
          }
          case 112: {

            rxSingleCollision_ = input.readUInt64();
            break;
          }
          case 120: {

            rxSymbolError_ = input.readUInt64();
            break;
          }
          case 128: {

            rxMaxsizeExceeded_ = input.readUInt64();
            break;
          }
          case 136: {

            outMacControlFrames_ = input.readUInt64();
            break;
          }
          case 144: {

            outMacPauseFrames_ = input.readUInt64();
            break;
          }
          case 152: {

            outIeee8021QFrames_ = input.readUInt64();
            break;
          }
          case 160: {

            outMacErrorsTx_ = input.readUInt64();
            break;
          }
          case 170: {
            opi_api.network.v1alpha1.EthernetInDistribution.Builder subBuilder = null;
            if (ethRxDistribution_ != null) {
              subBuilder = ethRxDistribution_.toBuilder();
            }
            ethRxDistribution_ = input.readMessage(opi_api.network.v1alpha1.EthernetInDistribution.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(ethRxDistribution_);
              ethRxDistribution_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.network.v1alpha1.OpenconfigEthernetProto.internal_static_opi_api_network_v1alpha1_EthernetCounters_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.network.v1alpha1.OpenconfigEthernetProto.internal_static_opi_api_network_v1alpha1_EthernetCounters_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.network.v1alpha1.EthernetCounters.class, opi_api.network.v1alpha1.EthernetCounters.Builder.class);
  }

  public static final int RX_MAC_CONTROL_FRAMES_FIELD_NUMBER = 1;
  private long rxMacControlFrames_;
  /**
   * <pre>
   * received mac control frame counter
   * </pre>
   *
   * <code>uint64 rx_mac_control_frames = 1;</code>
   * @return The rxMacControlFrames.
   */
  @java.lang.Override
  public long getRxMacControlFrames() {
    return rxMacControlFrames_;
  }

  public static final int RX_MAC_PAUSE_FRAMES_FIELD_NUMBER = 2;
  private long rxMacPauseFrames_;
  /**
   * <pre>
   * received mac pause frame counter
   * </pre>
   *
   * <code>uint64 rx_mac_pause_frames = 2;</code>
   * @return The rxMacPauseFrames.
   */
  @java.lang.Override
  public long getRxMacPauseFrames() {
    return rxMacPauseFrames_;
  }

  public static final int RX_OVERSIZE_FRAMES_FIELD_NUMBER = 3;
  private long rxOversizeFrames_;
  /**
   * <pre>
   * frames received that were oversized on the interface
   * (larger then 1518 octets)
   * </pre>
   *
   * <code>uint64 rx_oversize_frames = 3;</code>
   * @return The rxOversizeFrames.
   */
  @java.lang.Override
  public long getRxOversizeFrames() {
    return rxOversizeFrames_;
  }

  public static final int RX_UNDERSIZE_FRAMES_FIELD_NUMBER = 4;
  private long rxUndersizeFrames_;
  /**
   * <pre>
   * frames received that were undersized on the interface
   * (smaller then 64 octets)
   * </pre>
   *
   * <code>uint64 rx_undersize_frames = 4;</code>
   * @return The rxUndersizeFrames.
   */
  @java.lang.Override
  public long getRxUndersizeFrames() {
    return rxUndersizeFrames_;
  }

  public static final int RX_JABBER_FRAMES_FIELD_NUMBER = 5;
  private long rxJabberFrames_;
  /**
   * <pre>
   * Number of jabber frames received on the interface.
   * Jabber frames are typically defined as oversize frames which also
   * have a bad CRC
   * </pre>
   *
   * <code>uint64 rx_jabber_frames = 5;</code>
   * @return The rxJabberFrames.
   */
  @java.lang.Override
  public long getRxJabberFrames() {
    return rxJabberFrames_;
  }

  public static final int RX_FRAGMENT_FRAMES_FIELD_NUMBER = 6;
  private long rxFragmentFrames_;
  /**
   * <pre>
   * The total number of frames received that were less than 64 octets
   * in length (excluding framing bits but including FCS octets)
   * and had either a bad Frame Check Sequence (FCS) with an integral
   * number of octets (FCS Error) or a bad FCS with a non-integral number
   * of octets (Alignment Error)
   * </pre>
   *
   * <code>uint64 rx_fragment_frames = 6;</code>
   * @return The rxFragmentFrames.
   */
  @java.lang.Override
  public long getRxFragmentFrames() {
    return rxFragmentFrames_;
  }

  public static final int RX_IEEE8021Q_FRAMES_FIELD_NUMBER = 7;
  private long rxIeee8021QFrames_;
  /**
   * <pre>
   * Number of 802.1q tagged frames received on the interface
   * </pre>
   *
   * <code>uint64 rx_ieee8021q_frames = 7;</code>
   * @return The rxIeee8021qFrames.
   */
  @java.lang.Override
  public long getRxIeee8021QFrames() {
    return rxIeee8021QFrames_;
  }

  public static final int RX_CRC_ERRORS_FIELD_NUMBER = 8;
  private long rxCrcErrors_;
  /**
   * <pre>
   * The total number of frames received that had FCS errors
   * </pre>
   *
   * <code>uint64 rx_crc_errors = 8;</code>
   * @return The rxCrcErrors.
   */
  @java.lang.Override
  public long getRxCrcErrors() {
    return rxCrcErrors_;
  }

  public static final int RX_BLOCK_ERRORS_FIELD_NUMBER = 9;
  private long rxBlockErrors_;
  /**
   * <pre>
   * The number of received errored blocks
   * </pre>
   *
   * <code>uint64 rx_block_errors = 9;</code>
   * @return The rxBlockErrors.
   */
  @java.lang.Override
  public long getRxBlockErrors() {
    return rxBlockErrors_;
  }

  public static final int RX_CARRIER_ERRORS_FIELD_NUMBER = 10;
  private long rxCarrierErrors_;
  /**
   * <pre>
   * The number of received errored frames due to a carrier issue
   * </pre>
   *
   * <code>uint64 rx_carrier_errors = 10;</code>
   * @return The rxCarrierErrors.
   */
  @java.lang.Override
  public long getRxCarrierErrors() {
    return rxCarrierErrors_;
  }

  public static final int RX_INTERRUPTED_TX_FIELD_NUMBER = 11;
  private long rxInterruptedTx_;
  /**
   * <pre>
   * The number of received errored frames due to interrupted transmission
   * issue
   * </pre>
   *
   * <code>uint64 rx_interrupted_tx = 11;</code>
   * @return The rxInterruptedTx.
   */
  @java.lang.Override
  public long getRxInterruptedTx() {
    return rxInterruptedTx_;
  }

  public static final int RX_LATE_COLLISION_FIELD_NUMBER = 12;
  private long rxLateCollision_;
  /**
   * <pre>
   * The number of received errored frames due to late collision issue
   * </pre>
   *
   * <code>uint64 rx_late_collision = 12;</code>
   * @return The rxLateCollision.
   */
  @java.lang.Override
  public long getRxLateCollision() {
    return rxLateCollision_;
  }

  public static final int RX_MAC_ERRORS_RX_FIELD_NUMBER = 13;
  private long rxMacErrorsRx_;
  /**
   * <pre>
   * The number of received errored frames due to MAC errors received
   * </pre>
   *
   * <code>uint64 rx_mac_errors_rx = 13;</code>
   * @return The rxMacErrorsRx.
   */
  @java.lang.Override
  public long getRxMacErrorsRx() {
    return rxMacErrorsRx_;
  }

  public static final int RX_SINGLE_COLLISION_FIELD_NUMBER = 14;
  private long rxSingleCollision_;
  /**
   * <pre>
   * The number of received errored frames due to single collision issue
   * </pre>
   *
   * <code>uint64 rx_single_collision = 14;</code>
   * @return The rxSingleCollision.
   */
  @java.lang.Override
  public long getRxSingleCollision() {
    return rxSingleCollision_;
  }

  public static final int RX_SYMBOL_ERROR_FIELD_NUMBER = 15;
  private long rxSymbolError_;
  /**
   * <pre>
   * The number of received errored frames due to symbol error
   * </pre>
   *
   * <code>uint64 rx_symbol_error = 15;</code>
   * @return The rxSymbolError.
   */
  @java.lang.Override
  public long getRxSymbolError() {
    return rxSymbolError_;
  }

  public static final int RX_MAXSIZE_EXCEEDED_FIELD_NUMBER = 16;
  private long rxMaxsizeExceeded_;
  /**
   * <pre>
   * The total number frames received that are well-formed but dropped due
   * to exceeding the maximum frame size on the interface
   * </pre>
   *
   * <code>uint64 rx_maxsize_exceeded = 16;</code>
   * @return The rxMaxsizeExceeded.
   */
  @java.lang.Override
  public long getRxMaxsizeExceeded() {
    return rxMaxsizeExceeded_;
  }

  public static final int OUT_MAC_CONTROL_FRAMES_FIELD_NUMBER = 17;
  private long outMacControlFrames_;
  /**
   * <pre>
   * MAC layer control frames sent on the interface
   * </pre>
   *
   * <code>uint64 out_mac_control_frames = 17;</code>
   * @return The outMacControlFrames.
   */
  @java.lang.Override
  public long getOutMacControlFrames() {
    return outMacControlFrames_;
  }

  public static final int OUT_MAC_PAUSE_FRAMES_FIELD_NUMBER = 18;
  private long outMacPauseFrames_;
  /**
   * <pre>
   * MAC layer PAUSE frames sent on the interface
   * </pre>
   *
   * <code>uint64 out_mac_pause_frames = 18;</code>
   * @return The outMacPauseFrames.
   */
  @java.lang.Override
  public long getOutMacPauseFrames() {
    return outMacPauseFrames_;
  }

  public static final int OUT_IEEE8021Q_FRAMES_FIELD_NUMBER = 19;
  private long outIeee8021QFrames_;
  /**
   * <pre>
   * Number of 802.1q tagged frames sent on the interface
   * </pre>
   *
   * <code>uint64 out_ieee8021q_frames = 19;</code>
   * @return The outIeee8021qFrames.
   */
  @java.lang.Override
  public long getOutIeee8021QFrames() {
    return outIeee8021QFrames_;
  }

  public static final int OUT_MAC_ERRORS_TX_FIELD_NUMBER = 20;
  private long outMacErrorsTx_;
  /**
   * <pre>
   * The number of sent errored frames due to MAC errors transmitted
   * </pre>
   *
   * <code>uint64 out_mac_errors_tx = 20;</code>
   * @return The outMacErrorsTx.
   */
  @java.lang.Override
  public long getOutMacErrorsTx() {
    return outMacErrorsTx_;
  }

  public static final int ETH_RX_DISTRIBUTION_FIELD_NUMBER = 21;
  private opi_api.network.v1alpha1.EthernetInDistribution ethRxDistribution_;
  /**
   * <pre>
   * Receive Frame Distribution counters
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
   * @return Whether the ethRxDistribution field is set.
   */
  @java.lang.Override
  public boolean hasEthRxDistribution() {
    return ethRxDistribution_ != null;
  }
  /**
   * <pre>
   * Receive Frame Distribution counters
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
   * @return The ethRxDistribution.
   */
  @java.lang.Override
  public opi_api.network.v1alpha1.EthernetInDistribution getEthRxDistribution() {
    return ethRxDistribution_ == null ? opi_api.network.v1alpha1.EthernetInDistribution.getDefaultInstance() : ethRxDistribution_;
  }
  /**
   * <pre>
   * Receive Frame Distribution counters
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
   */
  @java.lang.Override
  public opi_api.network.v1alpha1.EthernetInDistributionOrBuilder getEthRxDistributionOrBuilder() {
    return getEthRxDistribution();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (rxMacControlFrames_ != 0L) {
      output.writeUInt64(1, rxMacControlFrames_);
    }
    if (rxMacPauseFrames_ != 0L) {
      output.writeUInt64(2, rxMacPauseFrames_);
    }
    if (rxOversizeFrames_ != 0L) {
      output.writeUInt64(3, rxOversizeFrames_);
    }
    if (rxUndersizeFrames_ != 0L) {
      output.writeUInt64(4, rxUndersizeFrames_);
    }
    if (rxJabberFrames_ != 0L) {
      output.writeUInt64(5, rxJabberFrames_);
    }
    if (rxFragmentFrames_ != 0L) {
      output.writeUInt64(6, rxFragmentFrames_);
    }
    if (rxIeee8021QFrames_ != 0L) {
      output.writeUInt64(7, rxIeee8021QFrames_);
    }
    if (rxCrcErrors_ != 0L) {
      output.writeUInt64(8, rxCrcErrors_);
    }
    if (rxBlockErrors_ != 0L) {
      output.writeUInt64(9, rxBlockErrors_);
    }
    if (rxCarrierErrors_ != 0L) {
      output.writeUInt64(10, rxCarrierErrors_);
    }
    if (rxInterruptedTx_ != 0L) {
      output.writeUInt64(11, rxInterruptedTx_);
    }
    if (rxLateCollision_ != 0L) {
      output.writeUInt64(12, rxLateCollision_);
    }
    if (rxMacErrorsRx_ != 0L) {
      output.writeUInt64(13, rxMacErrorsRx_);
    }
    if (rxSingleCollision_ != 0L) {
      output.writeUInt64(14, rxSingleCollision_);
    }
    if (rxSymbolError_ != 0L) {
      output.writeUInt64(15, rxSymbolError_);
    }
    if (rxMaxsizeExceeded_ != 0L) {
      output.writeUInt64(16, rxMaxsizeExceeded_);
    }
    if (outMacControlFrames_ != 0L) {
      output.writeUInt64(17, outMacControlFrames_);
    }
    if (outMacPauseFrames_ != 0L) {
      output.writeUInt64(18, outMacPauseFrames_);
    }
    if (outIeee8021QFrames_ != 0L) {
      output.writeUInt64(19, outIeee8021QFrames_);
    }
    if (outMacErrorsTx_ != 0L) {
      output.writeUInt64(20, outMacErrorsTx_);
    }
    if (ethRxDistribution_ != null) {
      output.writeMessage(21, getEthRxDistribution());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (rxMacControlFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, rxMacControlFrames_);
    }
    if (rxMacPauseFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, rxMacPauseFrames_);
    }
    if (rxOversizeFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, rxOversizeFrames_);
    }
    if (rxUndersizeFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, rxUndersizeFrames_);
    }
    if (rxJabberFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, rxJabberFrames_);
    }
    if (rxFragmentFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, rxFragmentFrames_);
    }
    if (rxIeee8021QFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, rxIeee8021QFrames_);
    }
    if (rxCrcErrors_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, rxCrcErrors_);
    }
    if (rxBlockErrors_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(9, rxBlockErrors_);
    }
    if (rxCarrierErrors_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(10, rxCarrierErrors_);
    }
    if (rxInterruptedTx_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(11, rxInterruptedTx_);
    }
    if (rxLateCollision_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(12, rxLateCollision_);
    }
    if (rxMacErrorsRx_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(13, rxMacErrorsRx_);
    }
    if (rxSingleCollision_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(14, rxSingleCollision_);
    }
    if (rxSymbolError_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(15, rxSymbolError_);
    }
    if (rxMaxsizeExceeded_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(16, rxMaxsizeExceeded_);
    }
    if (outMacControlFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(17, outMacControlFrames_);
    }
    if (outMacPauseFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(18, outMacPauseFrames_);
    }
    if (outIeee8021QFrames_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(19, outIeee8021QFrames_);
    }
    if (outMacErrorsTx_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(20, outMacErrorsTx_);
    }
    if (ethRxDistribution_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, getEthRxDistribution());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.network.v1alpha1.EthernetCounters)) {
      return super.equals(obj);
    }
    opi_api.network.v1alpha1.EthernetCounters other = (opi_api.network.v1alpha1.EthernetCounters) obj;

    if (getRxMacControlFrames()
        != other.getRxMacControlFrames()) return false;
    if (getRxMacPauseFrames()
        != other.getRxMacPauseFrames()) return false;
    if (getRxOversizeFrames()
        != other.getRxOversizeFrames()) return false;
    if (getRxUndersizeFrames()
        != other.getRxUndersizeFrames()) return false;
    if (getRxJabberFrames()
        != other.getRxJabberFrames()) return false;
    if (getRxFragmentFrames()
        != other.getRxFragmentFrames()) return false;
    if (getRxIeee8021QFrames()
        != other.getRxIeee8021QFrames()) return false;
    if (getRxCrcErrors()
        != other.getRxCrcErrors()) return false;
    if (getRxBlockErrors()
        != other.getRxBlockErrors()) return false;
    if (getRxCarrierErrors()
        != other.getRxCarrierErrors()) return false;
    if (getRxInterruptedTx()
        != other.getRxInterruptedTx()) return false;
    if (getRxLateCollision()
        != other.getRxLateCollision()) return false;
    if (getRxMacErrorsRx()
        != other.getRxMacErrorsRx()) return false;
    if (getRxSingleCollision()
        != other.getRxSingleCollision()) return false;
    if (getRxSymbolError()
        != other.getRxSymbolError()) return false;
    if (getRxMaxsizeExceeded()
        != other.getRxMaxsizeExceeded()) return false;
    if (getOutMacControlFrames()
        != other.getOutMacControlFrames()) return false;
    if (getOutMacPauseFrames()
        != other.getOutMacPauseFrames()) return false;
    if (getOutIeee8021QFrames()
        != other.getOutIeee8021QFrames()) return false;
    if (getOutMacErrorsTx()
        != other.getOutMacErrorsTx()) return false;
    if (hasEthRxDistribution() != other.hasEthRxDistribution()) return false;
    if (hasEthRxDistribution()) {
      if (!getEthRxDistribution()
          .equals(other.getEthRxDistribution())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RX_MAC_CONTROL_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxMacControlFrames());
    hash = (37 * hash) + RX_MAC_PAUSE_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxMacPauseFrames());
    hash = (37 * hash) + RX_OVERSIZE_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxOversizeFrames());
    hash = (37 * hash) + RX_UNDERSIZE_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxUndersizeFrames());
    hash = (37 * hash) + RX_JABBER_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxJabberFrames());
    hash = (37 * hash) + RX_FRAGMENT_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxFragmentFrames());
    hash = (37 * hash) + RX_IEEE8021Q_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxIeee8021QFrames());
    hash = (37 * hash) + RX_CRC_ERRORS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxCrcErrors());
    hash = (37 * hash) + RX_BLOCK_ERRORS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxBlockErrors());
    hash = (37 * hash) + RX_CARRIER_ERRORS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxCarrierErrors());
    hash = (37 * hash) + RX_INTERRUPTED_TX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxInterruptedTx());
    hash = (37 * hash) + RX_LATE_COLLISION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxLateCollision());
    hash = (37 * hash) + RX_MAC_ERRORS_RX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxMacErrorsRx());
    hash = (37 * hash) + RX_SINGLE_COLLISION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxSingleCollision());
    hash = (37 * hash) + RX_SYMBOL_ERROR_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxSymbolError());
    hash = (37 * hash) + RX_MAXSIZE_EXCEEDED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRxMaxsizeExceeded());
    hash = (37 * hash) + OUT_MAC_CONTROL_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOutMacControlFrames());
    hash = (37 * hash) + OUT_MAC_PAUSE_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOutMacPauseFrames());
    hash = (37 * hash) + OUT_IEEE8021Q_FRAMES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOutIeee8021QFrames());
    hash = (37 * hash) + OUT_MAC_ERRORS_TX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOutMacErrorsTx());
    if (hasEthRxDistribution()) {
      hash = (37 * hash) + ETH_RX_DISTRIBUTION_FIELD_NUMBER;
      hash = (53 * hash) + getEthRxDistribution().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.v1alpha1.EthernetCounters parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.network.v1alpha1.EthernetCounters prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Ethernet Interface Counters
   * </pre>
   *
   * Protobuf type {@code opi_api.network.v1alpha1.EthernetCounters}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.network.v1alpha1.EthernetCounters)
      opi_api.network.v1alpha1.EthernetCountersOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.network.v1alpha1.OpenconfigEthernetProto.internal_static_opi_api_network_v1alpha1_EthernetCounters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.network.v1alpha1.OpenconfigEthernetProto.internal_static_opi_api_network_v1alpha1_EthernetCounters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.network.v1alpha1.EthernetCounters.class, opi_api.network.v1alpha1.EthernetCounters.Builder.class);
    }

    // Construct using opi_api.network.v1alpha1.EthernetCounters.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      rxMacControlFrames_ = 0L;

      rxMacPauseFrames_ = 0L;

      rxOversizeFrames_ = 0L;

      rxUndersizeFrames_ = 0L;

      rxJabberFrames_ = 0L;

      rxFragmentFrames_ = 0L;

      rxIeee8021QFrames_ = 0L;

      rxCrcErrors_ = 0L;

      rxBlockErrors_ = 0L;

      rxCarrierErrors_ = 0L;

      rxInterruptedTx_ = 0L;

      rxLateCollision_ = 0L;

      rxMacErrorsRx_ = 0L;

      rxSingleCollision_ = 0L;

      rxSymbolError_ = 0L;

      rxMaxsizeExceeded_ = 0L;

      outMacControlFrames_ = 0L;

      outMacPauseFrames_ = 0L;

      outIeee8021QFrames_ = 0L;

      outMacErrorsTx_ = 0L;

      if (ethRxDistributionBuilder_ == null) {
        ethRxDistribution_ = null;
      } else {
        ethRxDistribution_ = null;
        ethRxDistributionBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.network.v1alpha1.OpenconfigEthernetProto.internal_static_opi_api_network_v1alpha1_EthernetCounters_descriptor;
    }

    @java.lang.Override
    public opi_api.network.v1alpha1.EthernetCounters getDefaultInstanceForType() {
      return opi_api.network.v1alpha1.EthernetCounters.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.network.v1alpha1.EthernetCounters build() {
      opi_api.network.v1alpha1.EthernetCounters result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.network.v1alpha1.EthernetCounters buildPartial() {
      opi_api.network.v1alpha1.EthernetCounters result = new opi_api.network.v1alpha1.EthernetCounters(this);
      result.rxMacControlFrames_ = rxMacControlFrames_;
      result.rxMacPauseFrames_ = rxMacPauseFrames_;
      result.rxOversizeFrames_ = rxOversizeFrames_;
      result.rxUndersizeFrames_ = rxUndersizeFrames_;
      result.rxJabberFrames_ = rxJabberFrames_;
      result.rxFragmentFrames_ = rxFragmentFrames_;
      result.rxIeee8021QFrames_ = rxIeee8021QFrames_;
      result.rxCrcErrors_ = rxCrcErrors_;
      result.rxBlockErrors_ = rxBlockErrors_;
      result.rxCarrierErrors_ = rxCarrierErrors_;
      result.rxInterruptedTx_ = rxInterruptedTx_;
      result.rxLateCollision_ = rxLateCollision_;
      result.rxMacErrorsRx_ = rxMacErrorsRx_;
      result.rxSingleCollision_ = rxSingleCollision_;
      result.rxSymbolError_ = rxSymbolError_;
      result.rxMaxsizeExceeded_ = rxMaxsizeExceeded_;
      result.outMacControlFrames_ = outMacControlFrames_;
      result.outMacPauseFrames_ = outMacPauseFrames_;
      result.outIeee8021QFrames_ = outIeee8021QFrames_;
      result.outMacErrorsTx_ = outMacErrorsTx_;
      if (ethRxDistributionBuilder_ == null) {
        result.ethRxDistribution_ = ethRxDistribution_;
      } else {
        result.ethRxDistribution_ = ethRxDistributionBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.network.v1alpha1.EthernetCounters) {
        return mergeFrom((opi_api.network.v1alpha1.EthernetCounters)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.network.v1alpha1.EthernetCounters other) {
      if (other == opi_api.network.v1alpha1.EthernetCounters.getDefaultInstance()) return this;
      if (other.getRxMacControlFrames() != 0L) {
        setRxMacControlFrames(other.getRxMacControlFrames());
      }
      if (other.getRxMacPauseFrames() != 0L) {
        setRxMacPauseFrames(other.getRxMacPauseFrames());
      }
      if (other.getRxOversizeFrames() != 0L) {
        setRxOversizeFrames(other.getRxOversizeFrames());
      }
      if (other.getRxUndersizeFrames() != 0L) {
        setRxUndersizeFrames(other.getRxUndersizeFrames());
      }
      if (other.getRxJabberFrames() != 0L) {
        setRxJabberFrames(other.getRxJabberFrames());
      }
      if (other.getRxFragmentFrames() != 0L) {
        setRxFragmentFrames(other.getRxFragmentFrames());
      }
      if (other.getRxIeee8021QFrames() != 0L) {
        setRxIeee8021QFrames(other.getRxIeee8021QFrames());
      }
      if (other.getRxCrcErrors() != 0L) {
        setRxCrcErrors(other.getRxCrcErrors());
      }
      if (other.getRxBlockErrors() != 0L) {
        setRxBlockErrors(other.getRxBlockErrors());
      }
      if (other.getRxCarrierErrors() != 0L) {
        setRxCarrierErrors(other.getRxCarrierErrors());
      }
      if (other.getRxInterruptedTx() != 0L) {
        setRxInterruptedTx(other.getRxInterruptedTx());
      }
      if (other.getRxLateCollision() != 0L) {
        setRxLateCollision(other.getRxLateCollision());
      }
      if (other.getRxMacErrorsRx() != 0L) {
        setRxMacErrorsRx(other.getRxMacErrorsRx());
      }
      if (other.getRxSingleCollision() != 0L) {
        setRxSingleCollision(other.getRxSingleCollision());
      }
      if (other.getRxSymbolError() != 0L) {
        setRxSymbolError(other.getRxSymbolError());
      }
      if (other.getRxMaxsizeExceeded() != 0L) {
        setRxMaxsizeExceeded(other.getRxMaxsizeExceeded());
      }
      if (other.getOutMacControlFrames() != 0L) {
        setOutMacControlFrames(other.getOutMacControlFrames());
      }
      if (other.getOutMacPauseFrames() != 0L) {
        setOutMacPauseFrames(other.getOutMacPauseFrames());
      }
      if (other.getOutIeee8021QFrames() != 0L) {
        setOutIeee8021QFrames(other.getOutIeee8021QFrames());
      }
      if (other.getOutMacErrorsTx() != 0L) {
        setOutMacErrorsTx(other.getOutMacErrorsTx());
      }
      if (other.hasEthRxDistribution()) {
        mergeEthRxDistribution(other.getEthRxDistribution());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.network.v1alpha1.EthernetCounters parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.network.v1alpha1.EthernetCounters) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long rxMacControlFrames_ ;
    /**
     * <pre>
     * received mac control frame counter
     * </pre>
     *
     * <code>uint64 rx_mac_control_frames = 1;</code>
     * @return The rxMacControlFrames.
     */
    @java.lang.Override
    public long getRxMacControlFrames() {
      return rxMacControlFrames_;
    }
    /**
     * <pre>
     * received mac control frame counter
     * </pre>
     *
     * <code>uint64 rx_mac_control_frames = 1;</code>
     * @param value The rxMacControlFrames to set.
     * @return This builder for chaining.
     */
    public Builder setRxMacControlFrames(long value) {
      
      rxMacControlFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * received mac control frame counter
     * </pre>
     *
     * <code>uint64 rx_mac_control_frames = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxMacControlFrames() {
      
      rxMacControlFrames_ = 0L;
      onChanged();
      return this;
    }

    private long rxMacPauseFrames_ ;
    /**
     * <pre>
     * received mac pause frame counter
     * </pre>
     *
     * <code>uint64 rx_mac_pause_frames = 2;</code>
     * @return The rxMacPauseFrames.
     */
    @java.lang.Override
    public long getRxMacPauseFrames() {
      return rxMacPauseFrames_;
    }
    /**
     * <pre>
     * received mac pause frame counter
     * </pre>
     *
     * <code>uint64 rx_mac_pause_frames = 2;</code>
     * @param value The rxMacPauseFrames to set.
     * @return This builder for chaining.
     */
    public Builder setRxMacPauseFrames(long value) {
      
      rxMacPauseFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * received mac pause frame counter
     * </pre>
     *
     * <code>uint64 rx_mac_pause_frames = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxMacPauseFrames() {
      
      rxMacPauseFrames_ = 0L;
      onChanged();
      return this;
    }

    private long rxOversizeFrames_ ;
    /**
     * <pre>
     * frames received that were oversized on the interface
     * (larger then 1518 octets)
     * </pre>
     *
     * <code>uint64 rx_oversize_frames = 3;</code>
     * @return The rxOversizeFrames.
     */
    @java.lang.Override
    public long getRxOversizeFrames() {
      return rxOversizeFrames_;
    }
    /**
     * <pre>
     * frames received that were oversized on the interface
     * (larger then 1518 octets)
     * </pre>
     *
     * <code>uint64 rx_oversize_frames = 3;</code>
     * @param value The rxOversizeFrames to set.
     * @return This builder for chaining.
     */
    public Builder setRxOversizeFrames(long value) {
      
      rxOversizeFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * frames received that were oversized on the interface
     * (larger then 1518 octets)
     * </pre>
     *
     * <code>uint64 rx_oversize_frames = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxOversizeFrames() {
      
      rxOversizeFrames_ = 0L;
      onChanged();
      return this;
    }

    private long rxUndersizeFrames_ ;
    /**
     * <pre>
     * frames received that were undersized on the interface
     * (smaller then 64 octets)
     * </pre>
     *
     * <code>uint64 rx_undersize_frames = 4;</code>
     * @return The rxUndersizeFrames.
     */
    @java.lang.Override
    public long getRxUndersizeFrames() {
      return rxUndersizeFrames_;
    }
    /**
     * <pre>
     * frames received that were undersized on the interface
     * (smaller then 64 octets)
     * </pre>
     *
     * <code>uint64 rx_undersize_frames = 4;</code>
     * @param value The rxUndersizeFrames to set.
     * @return This builder for chaining.
     */
    public Builder setRxUndersizeFrames(long value) {
      
      rxUndersizeFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * frames received that were undersized on the interface
     * (smaller then 64 octets)
     * </pre>
     *
     * <code>uint64 rx_undersize_frames = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxUndersizeFrames() {
      
      rxUndersizeFrames_ = 0L;
      onChanged();
      return this;
    }

    private long rxJabberFrames_ ;
    /**
     * <pre>
     * Number of jabber frames received on the interface.
     * Jabber frames are typically defined as oversize frames which also
     * have a bad CRC
     * </pre>
     *
     * <code>uint64 rx_jabber_frames = 5;</code>
     * @return The rxJabberFrames.
     */
    @java.lang.Override
    public long getRxJabberFrames() {
      return rxJabberFrames_;
    }
    /**
     * <pre>
     * Number of jabber frames received on the interface.
     * Jabber frames are typically defined as oversize frames which also
     * have a bad CRC
     * </pre>
     *
     * <code>uint64 rx_jabber_frames = 5;</code>
     * @param value The rxJabberFrames to set.
     * @return This builder for chaining.
     */
    public Builder setRxJabberFrames(long value) {
      
      rxJabberFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of jabber frames received on the interface.
     * Jabber frames are typically defined as oversize frames which also
     * have a bad CRC
     * </pre>
     *
     * <code>uint64 rx_jabber_frames = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxJabberFrames() {
      
      rxJabberFrames_ = 0L;
      onChanged();
      return this;
    }

    private long rxFragmentFrames_ ;
    /**
     * <pre>
     * The total number of frames received that were less than 64 octets
     * in length (excluding framing bits but including FCS octets)
     * and had either a bad Frame Check Sequence (FCS) with an integral
     * number of octets (FCS Error) or a bad FCS with a non-integral number
     * of octets (Alignment Error)
     * </pre>
     *
     * <code>uint64 rx_fragment_frames = 6;</code>
     * @return The rxFragmentFrames.
     */
    @java.lang.Override
    public long getRxFragmentFrames() {
      return rxFragmentFrames_;
    }
    /**
     * <pre>
     * The total number of frames received that were less than 64 octets
     * in length (excluding framing bits but including FCS octets)
     * and had either a bad Frame Check Sequence (FCS) with an integral
     * number of octets (FCS Error) or a bad FCS with a non-integral number
     * of octets (Alignment Error)
     * </pre>
     *
     * <code>uint64 rx_fragment_frames = 6;</code>
     * @param value The rxFragmentFrames to set.
     * @return This builder for chaining.
     */
    public Builder setRxFragmentFrames(long value) {
      
      rxFragmentFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of frames received that were less than 64 octets
     * in length (excluding framing bits but including FCS octets)
     * and had either a bad Frame Check Sequence (FCS) with an integral
     * number of octets (FCS Error) or a bad FCS with a non-integral number
     * of octets (Alignment Error)
     * </pre>
     *
     * <code>uint64 rx_fragment_frames = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxFragmentFrames() {
      
      rxFragmentFrames_ = 0L;
      onChanged();
      return this;
    }

    private long rxIeee8021QFrames_ ;
    /**
     * <pre>
     * Number of 802.1q tagged frames received on the interface
     * </pre>
     *
     * <code>uint64 rx_ieee8021q_frames = 7;</code>
     * @return The rxIeee8021qFrames.
     */
    @java.lang.Override
    public long getRxIeee8021QFrames() {
      return rxIeee8021QFrames_;
    }
    /**
     * <pre>
     * Number of 802.1q tagged frames received on the interface
     * </pre>
     *
     * <code>uint64 rx_ieee8021q_frames = 7;</code>
     * @param value The rxIeee8021qFrames to set.
     * @return This builder for chaining.
     */
    public Builder setRxIeee8021QFrames(long value) {
      
      rxIeee8021QFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of 802.1q tagged frames received on the interface
     * </pre>
     *
     * <code>uint64 rx_ieee8021q_frames = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxIeee8021QFrames() {
      
      rxIeee8021QFrames_ = 0L;
      onChanged();
      return this;
    }

    private long rxCrcErrors_ ;
    /**
     * <pre>
     * The total number of frames received that had FCS errors
     * </pre>
     *
     * <code>uint64 rx_crc_errors = 8;</code>
     * @return The rxCrcErrors.
     */
    @java.lang.Override
    public long getRxCrcErrors() {
      return rxCrcErrors_;
    }
    /**
     * <pre>
     * The total number of frames received that had FCS errors
     * </pre>
     *
     * <code>uint64 rx_crc_errors = 8;</code>
     * @param value The rxCrcErrors to set.
     * @return This builder for chaining.
     */
    public Builder setRxCrcErrors(long value) {
      
      rxCrcErrors_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of frames received that had FCS errors
     * </pre>
     *
     * <code>uint64 rx_crc_errors = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxCrcErrors() {
      
      rxCrcErrors_ = 0L;
      onChanged();
      return this;
    }

    private long rxBlockErrors_ ;
    /**
     * <pre>
     * The number of received errored blocks
     * </pre>
     *
     * <code>uint64 rx_block_errors = 9;</code>
     * @return The rxBlockErrors.
     */
    @java.lang.Override
    public long getRxBlockErrors() {
      return rxBlockErrors_;
    }
    /**
     * <pre>
     * The number of received errored blocks
     * </pre>
     *
     * <code>uint64 rx_block_errors = 9;</code>
     * @param value The rxBlockErrors to set.
     * @return This builder for chaining.
     */
    public Builder setRxBlockErrors(long value) {
      
      rxBlockErrors_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of received errored blocks
     * </pre>
     *
     * <code>uint64 rx_block_errors = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxBlockErrors() {
      
      rxBlockErrors_ = 0L;
      onChanged();
      return this;
    }

    private long rxCarrierErrors_ ;
    /**
     * <pre>
     * The number of received errored frames due to a carrier issue
     * </pre>
     *
     * <code>uint64 rx_carrier_errors = 10;</code>
     * @return The rxCarrierErrors.
     */
    @java.lang.Override
    public long getRxCarrierErrors() {
      return rxCarrierErrors_;
    }
    /**
     * <pre>
     * The number of received errored frames due to a carrier issue
     * </pre>
     *
     * <code>uint64 rx_carrier_errors = 10;</code>
     * @param value The rxCarrierErrors to set.
     * @return This builder for chaining.
     */
    public Builder setRxCarrierErrors(long value) {
      
      rxCarrierErrors_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of received errored frames due to a carrier issue
     * </pre>
     *
     * <code>uint64 rx_carrier_errors = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxCarrierErrors() {
      
      rxCarrierErrors_ = 0L;
      onChanged();
      return this;
    }

    private long rxInterruptedTx_ ;
    /**
     * <pre>
     * The number of received errored frames due to interrupted transmission
     * issue
     * </pre>
     *
     * <code>uint64 rx_interrupted_tx = 11;</code>
     * @return The rxInterruptedTx.
     */
    @java.lang.Override
    public long getRxInterruptedTx() {
      return rxInterruptedTx_;
    }
    /**
     * <pre>
     * The number of received errored frames due to interrupted transmission
     * issue
     * </pre>
     *
     * <code>uint64 rx_interrupted_tx = 11;</code>
     * @param value The rxInterruptedTx to set.
     * @return This builder for chaining.
     */
    public Builder setRxInterruptedTx(long value) {
      
      rxInterruptedTx_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of received errored frames due to interrupted transmission
     * issue
     * </pre>
     *
     * <code>uint64 rx_interrupted_tx = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxInterruptedTx() {
      
      rxInterruptedTx_ = 0L;
      onChanged();
      return this;
    }

    private long rxLateCollision_ ;
    /**
     * <pre>
     * The number of received errored frames due to late collision issue
     * </pre>
     *
     * <code>uint64 rx_late_collision = 12;</code>
     * @return The rxLateCollision.
     */
    @java.lang.Override
    public long getRxLateCollision() {
      return rxLateCollision_;
    }
    /**
     * <pre>
     * The number of received errored frames due to late collision issue
     * </pre>
     *
     * <code>uint64 rx_late_collision = 12;</code>
     * @param value The rxLateCollision to set.
     * @return This builder for chaining.
     */
    public Builder setRxLateCollision(long value) {
      
      rxLateCollision_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of received errored frames due to late collision issue
     * </pre>
     *
     * <code>uint64 rx_late_collision = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxLateCollision() {
      
      rxLateCollision_ = 0L;
      onChanged();
      return this;
    }

    private long rxMacErrorsRx_ ;
    /**
     * <pre>
     * The number of received errored frames due to MAC errors received
     * </pre>
     *
     * <code>uint64 rx_mac_errors_rx = 13;</code>
     * @return The rxMacErrorsRx.
     */
    @java.lang.Override
    public long getRxMacErrorsRx() {
      return rxMacErrorsRx_;
    }
    /**
     * <pre>
     * The number of received errored frames due to MAC errors received
     * </pre>
     *
     * <code>uint64 rx_mac_errors_rx = 13;</code>
     * @param value The rxMacErrorsRx to set.
     * @return This builder for chaining.
     */
    public Builder setRxMacErrorsRx(long value) {
      
      rxMacErrorsRx_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of received errored frames due to MAC errors received
     * </pre>
     *
     * <code>uint64 rx_mac_errors_rx = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxMacErrorsRx() {
      
      rxMacErrorsRx_ = 0L;
      onChanged();
      return this;
    }

    private long rxSingleCollision_ ;
    /**
     * <pre>
     * The number of received errored frames due to single collision issue
     * </pre>
     *
     * <code>uint64 rx_single_collision = 14;</code>
     * @return The rxSingleCollision.
     */
    @java.lang.Override
    public long getRxSingleCollision() {
      return rxSingleCollision_;
    }
    /**
     * <pre>
     * The number of received errored frames due to single collision issue
     * </pre>
     *
     * <code>uint64 rx_single_collision = 14;</code>
     * @param value The rxSingleCollision to set.
     * @return This builder for chaining.
     */
    public Builder setRxSingleCollision(long value) {
      
      rxSingleCollision_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of received errored frames due to single collision issue
     * </pre>
     *
     * <code>uint64 rx_single_collision = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxSingleCollision() {
      
      rxSingleCollision_ = 0L;
      onChanged();
      return this;
    }

    private long rxSymbolError_ ;
    /**
     * <pre>
     * The number of received errored frames due to symbol error
     * </pre>
     *
     * <code>uint64 rx_symbol_error = 15;</code>
     * @return The rxSymbolError.
     */
    @java.lang.Override
    public long getRxSymbolError() {
      return rxSymbolError_;
    }
    /**
     * <pre>
     * The number of received errored frames due to symbol error
     * </pre>
     *
     * <code>uint64 rx_symbol_error = 15;</code>
     * @param value The rxSymbolError to set.
     * @return This builder for chaining.
     */
    public Builder setRxSymbolError(long value) {
      
      rxSymbolError_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of received errored frames due to symbol error
     * </pre>
     *
     * <code>uint64 rx_symbol_error = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxSymbolError() {
      
      rxSymbolError_ = 0L;
      onChanged();
      return this;
    }

    private long rxMaxsizeExceeded_ ;
    /**
     * <pre>
     * The total number frames received that are well-formed but dropped due
     * to exceeding the maximum frame size on the interface
     * </pre>
     *
     * <code>uint64 rx_maxsize_exceeded = 16;</code>
     * @return The rxMaxsizeExceeded.
     */
    @java.lang.Override
    public long getRxMaxsizeExceeded() {
      return rxMaxsizeExceeded_;
    }
    /**
     * <pre>
     * The total number frames received that are well-formed but dropped due
     * to exceeding the maximum frame size on the interface
     * </pre>
     *
     * <code>uint64 rx_maxsize_exceeded = 16;</code>
     * @param value The rxMaxsizeExceeded to set.
     * @return This builder for chaining.
     */
    public Builder setRxMaxsizeExceeded(long value) {
      
      rxMaxsizeExceeded_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number frames received that are well-formed but dropped due
     * to exceeding the maximum frame size on the interface
     * </pre>
     *
     * <code>uint64 rx_maxsize_exceeded = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearRxMaxsizeExceeded() {
      
      rxMaxsizeExceeded_ = 0L;
      onChanged();
      return this;
    }

    private long outMacControlFrames_ ;
    /**
     * <pre>
     * MAC layer control frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_mac_control_frames = 17;</code>
     * @return The outMacControlFrames.
     */
    @java.lang.Override
    public long getOutMacControlFrames() {
      return outMacControlFrames_;
    }
    /**
     * <pre>
     * MAC layer control frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_mac_control_frames = 17;</code>
     * @param value The outMacControlFrames to set.
     * @return This builder for chaining.
     */
    public Builder setOutMacControlFrames(long value) {
      
      outMacControlFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MAC layer control frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_mac_control_frames = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutMacControlFrames() {
      
      outMacControlFrames_ = 0L;
      onChanged();
      return this;
    }

    private long outMacPauseFrames_ ;
    /**
     * <pre>
     * MAC layer PAUSE frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_mac_pause_frames = 18;</code>
     * @return The outMacPauseFrames.
     */
    @java.lang.Override
    public long getOutMacPauseFrames() {
      return outMacPauseFrames_;
    }
    /**
     * <pre>
     * MAC layer PAUSE frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_mac_pause_frames = 18;</code>
     * @param value The outMacPauseFrames to set.
     * @return This builder for chaining.
     */
    public Builder setOutMacPauseFrames(long value) {
      
      outMacPauseFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MAC layer PAUSE frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_mac_pause_frames = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutMacPauseFrames() {
      
      outMacPauseFrames_ = 0L;
      onChanged();
      return this;
    }

    private long outIeee8021QFrames_ ;
    /**
     * <pre>
     * Number of 802.1q tagged frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_ieee8021q_frames = 19;</code>
     * @return The outIeee8021qFrames.
     */
    @java.lang.Override
    public long getOutIeee8021QFrames() {
      return outIeee8021QFrames_;
    }
    /**
     * <pre>
     * Number of 802.1q tagged frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_ieee8021q_frames = 19;</code>
     * @param value The outIeee8021qFrames to set.
     * @return This builder for chaining.
     */
    public Builder setOutIeee8021QFrames(long value) {
      
      outIeee8021QFrames_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of 802.1q tagged frames sent on the interface
     * </pre>
     *
     * <code>uint64 out_ieee8021q_frames = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutIeee8021QFrames() {
      
      outIeee8021QFrames_ = 0L;
      onChanged();
      return this;
    }

    private long outMacErrorsTx_ ;
    /**
     * <pre>
     * The number of sent errored frames due to MAC errors transmitted
     * </pre>
     *
     * <code>uint64 out_mac_errors_tx = 20;</code>
     * @return The outMacErrorsTx.
     */
    @java.lang.Override
    public long getOutMacErrorsTx() {
      return outMacErrorsTx_;
    }
    /**
     * <pre>
     * The number of sent errored frames due to MAC errors transmitted
     * </pre>
     *
     * <code>uint64 out_mac_errors_tx = 20;</code>
     * @param value The outMacErrorsTx to set.
     * @return This builder for chaining.
     */
    public Builder setOutMacErrorsTx(long value) {
      
      outMacErrorsTx_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of sent errored frames due to MAC errors transmitted
     * </pre>
     *
     * <code>uint64 out_mac_errors_tx = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutMacErrorsTx() {
      
      outMacErrorsTx_ = 0L;
      onChanged();
      return this;
    }

    private opi_api.network.v1alpha1.EthernetInDistribution ethRxDistribution_;
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.v1alpha1.EthernetInDistribution, opi_api.network.v1alpha1.EthernetInDistribution.Builder, opi_api.network.v1alpha1.EthernetInDistributionOrBuilder> ethRxDistributionBuilder_;
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     * @return Whether the ethRxDistribution field is set.
     */
    public boolean hasEthRxDistribution() {
      return ethRxDistributionBuilder_ != null || ethRxDistribution_ != null;
    }
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     * @return The ethRxDistribution.
     */
    public opi_api.network.v1alpha1.EthernetInDistribution getEthRxDistribution() {
      if (ethRxDistributionBuilder_ == null) {
        return ethRxDistribution_ == null ? opi_api.network.v1alpha1.EthernetInDistribution.getDefaultInstance() : ethRxDistribution_;
      } else {
        return ethRxDistributionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     */
    public Builder setEthRxDistribution(opi_api.network.v1alpha1.EthernetInDistribution value) {
      if (ethRxDistributionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ethRxDistribution_ = value;
        onChanged();
      } else {
        ethRxDistributionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     */
    public Builder setEthRxDistribution(
        opi_api.network.v1alpha1.EthernetInDistribution.Builder builderForValue) {
      if (ethRxDistributionBuilder_ == null) {
        ethRxDistribution_ = builderForValue.build();
        onChanged();
      } else {
        ethRxDistributionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     */
    public Builder mergeEthRxDistribution(opi_api.network.v1alpha1.EthernetInDistribution value) {
      if (ethRxDistributionBuilder_ == null) {
        if (ethRxDistribution_ != null) {
          ethRxDistribution_ =
            opi_api.network.v1alpha1.EthernetInDistribution.newBuilder(ethRxDistribution_).mergeFrom(value).buildPartial();
        } else {
          ethRxDistribution_ = value;
        }
        onChanged();
      } else {
        ethRxDistributionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     */
    public Builder clearEthRxDistribution() {
      if (ethRxDistributionBuilder_ == null) {
        ethRxDistribution_ = null;
        onChanged();
      } else {
        ethRxDistribution_ = null;
        ethRxDistributionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     */
    public opi_api.network.v1alpha1.EthernetInDistribution.Builder getEthRxDistributionBuilder() {
      
      onChanged();
      return getEthRxDistributionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     */
    public opi_api.network.v1alpha1.EthernetInDistributionOrBuilder getEthRxDistributionOrBuilder() {
      if (ethRxDistributionBuilder_ != null) {
        return ethRxDistributionBuilder_.getMessageOrBuilder();
      } else {
        return ethRxDistribution_ == null ?
            opi_api.network.v1alpha1.EthernetInDistribution.getDefaultInstance() : ethRxDistribution_;
      }
    }
    /**
     * <pre>
     * Receive Frame Distribution counters
     * </pre>
     *
     * <code>.opi_api.network.v1alpha1.EthernetInDistribution eth_rx_distribution = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        opi_api.network.v1alpha1.EthernetInDistribution, opi_api.network.v1alpha1.EthernetInDistribution.Builder, opi_api.network.v1alpha1.EthernetInDistributionOrBuilder> 
        getEthRxDistributionFieldBuilder() {
      if (ethRxDistributionBuilder_ == null) {
        ethRxDistributionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            opi_api.network.v1alpha1.EthernetInDistribution, opi_api.network.v1alpha1.EthernetInDistribution.Builder, opi_api.network.v1alpha1.EthernetInDistributionOrBuilder>(
                getEthRxDistribution(),
                getParentForChildren(),
                isClean());
        ethRxDistribution_ = null;
      }
      return ethRxDistributionBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.network.v1alpha1.EthernetCounters)
  }

  // @@protoc_insertion_point(class_scope:opi_api.network.v1alpha1.EthernetCounters)
  private static final opi_api.network.v1alpha1.EthernetCounters DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.network.v1alpha1.EthernetCounters();
  }

  public static opi_api.network.v1alpha1.EthernetCounters getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EthernetCounters>
      PARSER = new com.google.protobuf.AbstractParser<EthernetCounters>() {
    @java.lang.Override
    public EthernetCounters parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EthernetCounters(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EthernetCounters> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EthernetCounters> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.network.v1alpha1.EthernetCounters getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

