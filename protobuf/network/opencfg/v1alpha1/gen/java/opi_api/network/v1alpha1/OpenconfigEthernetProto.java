// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig_ethernet.proto

package opi_api.network.v1alpha1;

public final class OpenconfigEthernetProto {
  private OpenconfigEthernetProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opi_api_network_v1alpha1_EthernetConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opi_api_network_v1alpha1_EthernetConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opi_api_network_v1alpha1_EthernetInDistribution_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opi_api_network_v1alpha1_EthernetInDistribution_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opi_api_network_v1alpha1_EthernetCounters_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opi_api_network_v1alpha1_EthernetCounters_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opi_api_network_v1alpha1_EthernetState_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opi_api_network_v1alpha1_EthernetState_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opi_api_network_v1alpha1_EthernetIf_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opi_api_network_v1alpha1_EthernetIf_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031openconfig_ethernet.proto\022\030opi_api.net" +
      "work.v1alpha1\032\025openconfig_vlan.proto\032\037go" +
      "ogle/api/field_behavior.proto\"\321\002\n\016Ethern" +
      "etConfig\022\030\n\013mac_address\030\001 \001(\tB\003\340A\001\022\033\n\016au" +
      "to_negotiate\030\002 \001(\010B\003\340A\001\022%\n\030standalone_li" +
      "nk_training\030\003 \001(\010B\003\340A\001\022A\n\013duplex_mode\030\004 " +
      "\001(\0162\'.opi_api.network.v1alpha1.EthDuplex" +
      "ModeB\003\340A\001\022?\n\nport_speed\030\005 \001(\0162&.opi_api." +
      "network.v1alpha1.EthPortSpeedB\003\340A\001\022 \n\023en" +
      "able_flow_control\030\006 \001(\010B\003\340A\001\022;\n\010fec_mode" +
      "\030\007 \001(\0162$.opi_api.network.v1alpha1.EthFec" +
      "ModeB\003\340A\001\"\345\001\n\026EthernetInDistribution\022\032\n\022" +
      "rx_frames_octets64\030\001 \001(\004\022 \n\030rx_frames_oc" +
      "tets65_to127\030\002 \001(\004\022!\n\031rx_frames_octets12" +
      "8_to255\030\003 \001(\004\022!\n\031rx_frames_octets256_to5" +
      "11\030\004 \001(\004\022\"\n\032rx_frames_octets512_to1023\030\005" +
      " \001(\004\022#\n\033rx_frames_octets1024_to1518\030\006 \001(" +
      "\004\"\216\005\n\020EthernetCounters\022\035\n\025rx_mac_control" +
      "_frames\030\001 \001(\004\022\033\n\023rx_mac_pause_frames\030\002 \001" +
      "(\004\022\032\n\022rx_oversize_frames\030\003 \001(\004\022\033\n\023rx_und" +
      "ersize_frames\030\004 \001(\004\022\030\n\020rx_jabber_frames\030" +
      "\005 \001(\004\022\032\n\022rx_fragment_frames\030\006 \001(\004\022\033\n\023rx_" +
      "ieee8021q_frames\030\007 \001(\004\022\025\n\rrx_crc_errors\030" +
      "\010 \001(\004\022\027\n\017rx_block_errors\030\t \001(\004\022\031\n\021rx_car" +
      "rier_errors\030\n \001(\004\022\031\n\021rx_interrupted_tx\030\013" +
      " \001(\004\022\031\n\021rx_late_collision\030\014 \001(\004\022\030\n\020rx_ma" +
      "c_errors_rx\030\r \001(\004\022\033\n\023rx_single_collision" +
      "\030\016 \001(\004\022\027\n\017rx_symbol_error\030\017 \001(\004\022\033\n\023rx_ma" +
      "xsize_exceeded\030\020 \001(\004\022\036\n\026out_mac_control_" +
      "frames\030\021 \001(\004\022\034\n\024out_mac_pause_frames\030\022 \001" +
      "(\004\022\034\n\024out_ieee8021q_frames\030\023 \001(\004\022\031\n\021out_" +
      "mac_errors_tx\030\024 \001(\004\022M\n\023eth_rx_distributi" +
      "on\030\025 \001(\01320.opi_api.network.v1alpha1.Ethe" +
      "rnetInDistribution\"\223\004\n\rEthernetState\022\023\n\013" +
      "mac_address\030\001 \001(\t\022\026\n\016auto_negotiate\030\002 \001(" +
      "\010\022 \n\030standalone_link_training\030\003 \001(\010\022<\n\013d" +
      "uplex_mode\030\004 \001(\0162\'.opi_api.network.v1alp" +
      "ha1.EthDuplexMode\022:\n\nport_speed\030\005 \001(\0162&." +
      "opi_api.network.v1alpha1.EthPortSpeed\022\033\n" +
      "\023enable_flow_control\030\006 \001(\010\0226\n\010fec_mode\030\007" +
      " \001(\0162$.opi_api.network.v1alpha1.EthFecMo" +
      "de\022\026\n\016hw_mac_address\030\010 \001(\t\022G\n\026negotiated" +
      "_duplex_mode\030\t \001(\0162\'.opi_api.network.v1a" +
      "lpha1.EthDuplexMode\022E\n\025negotiated_port_s" +
      "peed\030\n \001(\0162&.opi_api.network.v1alpha1.Et" +
      "hPortSpeed\022<\n\010counters\030\013 \001(\0132*.opi_api.n" +
      "etwork.v1alpha1.EthernetCounters\"\277\001\n\nEth" +
      "ernetIf\0228\n\006config\030\001 \001(\0132(.opi_api.networ" +
      "k.v1alpha1.EthernetConfig\0226\n\005state\030\002 \001(\013" +
      "2\'.opi_api.network.v1alpha1.EthernetStat" +
      "e\022?\n\rswitched_vlan\030\003 \001(\0132(.opi_api.netwo" +
      "rk.v1alpha1.VlanSwitchedIf*d\n\rEthDuplexM" +
      "ode\022\037\n\033ETH_DUPLEX_MODE_UNSPECIFIED\020\000\022\030\n\024" +
      "ETH_DUPLEX_MODE_FULL\020\001\022\030\n\024ETH_DUPLEX_MOD" +
      "E_HALF\020\002*\240\003\n\014EthPortSpeed\022\036\n\032ETH_PORT_SP" +
      "EED_UNSPECIFIED\020\000\022\026\n\022ETH_PORT_SPEED_10M\020" +
      "\001\022\027\n\023ETH_PORT_SPEED_100M\020\002\022\025\n\021ETH_PORT_S" +
      "PEED_1G\020\003\022\030\n\024ETH_PORT_SPEED_2500M\020\004\022\025\n\021E" +
      "TH_PORT_SPEED_5G\020\005\022\026\n\022ETH_PORT_SPEED_10G" +
      "\020\006\022\026\n\022ETH_PORT_SPEED_25G\020\007\022\026\n\022ETH_PORT_S" +
      "PEED_40G\020\010\022\026\n\022ETH_PORT_SPEED_50G\020\t\022\027\n\023ET" +
      "H_PORT_SPEED_100G\020\n\022\027\n\023ETH_PORT_SPEED_20" +
      "0G\020\013\022\027\n\023ETH_PORT_SPEED_400G\020\014\022\027\n\023ETH_POR" +
      "T_SPEED_600G\020\r\022\027\n\023ETH_PORT_SPEED_800G\020\016\022" +
      "\032\n\026ETH_PORT_SPEED_UNKNOWN\020\017*\260\001\n\nEthFecMo" +
      "de\022\034\n\030ETH_FEC_MODE_UNSPECIFIED\020\000\022\023\n\017ETH_" +
      "FEC_MODE_FC\020\001\022\026\n\022ETH_FEC_MODE_RS528\020\002\022\026\n" +
      "\022ETH_FEC_MODE_RS544\020\003\022$\n ETH_FEC_MODE_RS" +
      "544_2X_INTERLEAVE\020\004\022\031\n\025ETH_FEC_MODE_DISA" +
      "BLED\020\005By\n\030opi_api.network.v1alpha1B\027Open" +
      "configEthernetProtoP\001ZBgithub.com/opipro" +
      "ject/opi-api/network/opinetcommon/v1alph" +
      "a1/gen/gob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          opi_api.network.v1alpha1.OpenconfigVlanProto.getDescriptor(),
          com.google.api.FieldBehaviorProto.getDescriptor(),
        });
    internal_static_opi_api_network_v1alpha1_EthernetConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opi_api_network_v1alpha1_EthernetConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opi_api_network_v1alpha1_EthernetConfig_descriptor,
        new java.lang.String[] { "MacAddress", "AutoNegotiate", "StandaloneLinkTraining", "DuplexMode", "PortSpeed", "EnableFlowControl", "FecMode", });
    internal_static_opi_api_network_v1alpha1_EthernetInDistribution_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_opi_api_network_v1alpha1_EthernetInDistribution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opi_api_network_v1alpha1_EthernetInDistribution_descriptor,
        new java.lang.String[] { "RxFramesOctets64", "RxFramesOctets65To127", "RxFramesOctets128To255", "RxFramesOctets256To511", "RxFramesOctets512To1023", "RxFramesOctets1024To1518", });
    internal_static_opi_api_network_v1alpha1_EthernetCounters_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_opi_api_network_v1alpha1_EthernetCounters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opi_api_network_v1alpha1_EthernetCounters_descriptor,
        new java.lang.String[] { "RxMacControlFrames", "RxMacPauseFrames", "RxOversizeFrames", "RxUndersizeFrames", "RxJabberFrames", "RxFragmentFrames", "RxIeee8021QFrames", "RxCrcErrors", "RxBlockErrors", "RxCarrierErrors", "RxInterruptedTx", "RxLateCollision", "RxMacErrorsRx", "RxSingleCollision", "RxSymbolError", "RxMaxsizeExceeded", "OutMacControlFrames", "OutMacPauseFrames", "OutIeee8021QFrames", "OutMacErrorsTx", "EthRxDistribution", });
    internal_static_opi_api_network_v1alpha1_EthernetState_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_opi_api_network_v1alpha1_EthernetState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opi_api_network_v1alpha1_EthernetState_descriptor,
        new java.lang.String[] { "MacAddress", "AutoNegotiate", "StandaloneLinkTraining", "DuplexMode", "PortSpeed", "EnableFlowControl", "FecMode", "HwMacAddress", "NegotiatedDuplexMode", "NegotiatedPortSpeed", "Counters", });
    internal_static_opi_api_network_v1alpha1_EthernetIf_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_opi_api_network_v1alpha1_EthernetIf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opi_api_network_v1alpha1_EthernetIf_descriptor,
        new java.lang.String[] { "Config", "State", "SwitchedVlan", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    opi_api.network.v1alpha1.OpenconfigVlanProto.getDescriptor();
    com.google.api.FieldBehaviorProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
