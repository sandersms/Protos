// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig_vlan.proto

package opi_api.network.v1alpha1;

public interface SwitchedVlanSettingOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.v1alpha1.SwitchedVlanSetting)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Setting for the VLAN interface to access or trunk mode
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.VlanIfMode vlan_interface_mode = 1;</code>
   * @return The enum numeric value on the wire for vlanInterfaceMode.
   */
  int getVlanInterfaceModeValue();
  /**
   * <pre>
   * Setting for the VLAN interface to access or trunk mode
   * </pre>
   *
   * <code>.opi_api.network.v1alpha1.VlanIfMode vlan_interface_mode = 1;</code>
   * @return The vlanInterfaceMode.
   */
  opi_api.network.v1alpha1.VlanIfMode getVlanInterfaceMode();

  /**
   * <pre>
   * VLAN ID when the mode is set to trunk mode
   * </pre>
   *
   * <code>uint32 native_vlan = 2;</code>
   * @return The nativeVlan.
   */
  int getNativeVlan();

  /**
   * <pre>
   * VLAN ID when the mode is set to access mode
   * </pre>
   *
   * <code>uint32 access_vlan = 3;</code>
   * @return The accessVlan.
   */
  int getAccessVlan();

  /**
   * <pre>
   * Allowed VLANs may be specified for trunk mode interfaces
   * </pre>
   *
   * <code>string trunk_vlans = 4;</code>
   * @return The trunkVlans.
   */
  java.lang.String getTrunkVlans();
  /**
   * <pre>
   * Allowed VLANs may be specified for trunk mode interfaces
   * </pre>
   *
   * <code>string trunk_vlans = 4;</code>
   * @return The bytes for trunkVlans.
   */
  com.google.protobuf.ByteString
      getTrunkVlansBytes();
}
