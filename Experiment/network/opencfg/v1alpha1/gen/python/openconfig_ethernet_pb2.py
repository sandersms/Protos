# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: openconfig_ethernet.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import openconfig_vlan_pb2 as openconfig__vlan__pb2
from google.api import field_behavior_pb2 as google_dot_api_dot_field__behavior__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19openconfig_ethernet.proto\x12\x18opi_api.network.v1alpha1\x1a\x15openconfig_vlan.proto\x1a\x1fgoogle/api/field_behavior.proto\"\xd1\x02\n\x0e\x45thernetConfig\x12\x18\n\x0bmac_address\x18\x01 \x01(\tB\x03\xe0\x41\x01\x12\x1b\n\x0e\x61uto_negotiate\x18\x02 \x01(\x08\x42\x03\xe0\x41\x01\x12%\n\x18standalone_link_training\x18\x03 \x01(\x08\x42\x03\xe0\x41\x01\x12\x41\n\x0b\x64uplex_mode\x18\x04 \x01(\x0e\x32\'.opi_api.network.v1alpha1.EthDuplexModeB\x03\xe0\x41\x01\x12?\n\nport_speed\x18\x05 \x01(\x0e\x32&.opi_api.network.v1alpha1.EthPortSpeedB\x03\xe0\x41\x01\x12 \n\x13\x65nable_flow_control\x18\x06 \x01(\x08\x42\x03\xe0\x41\x01\x12;\n\x08\x66\x65\x63_mode\x18\x07 \x01(\x0e\x32$.opi_api.network.v1alpha1.EthFecModeB\x03\xe0\x41\x01\"\xe5\x01\n\x16\x45thernetInDistribution\x12\x1a\n\x12rx_frames_octets64\x18\x01 \x01(\x04\x12 \n\x18rx_frames_octets65_to127\x18\x02 \x01(\x04\x12!\n\x19rx_frames_octets128_to255\x18\x03 \x01(\x04\x12!\n\x19rx_frames_octets256_to511\x18\x04 \x01(\x04\x12\"\n\x1arx_frames_octets512_to1023\x18\x05 \x01(\x04\x12#\n\x1brx_frames_octets1024_to1518\x18\x06 \x01(\x04\"\x8e\x05\n\x10\x45thernetCounters\x12\x1d\n\x15rx_mac_control_frames\x18\x01 \x01(\x04\x12\x1b\n\x13rx_mac_pause_frames\x18\x02 \x01(\x04\x12\x1a\n\x12rx_oversize_frames\x18\x03 \x01(\x04\x12\x1b\n\x13rx_undersize_frames\x18\x04 \x01(\x04\x12\x18\n\x10rx_jabber_frames\x18\x05 \x01(\x04\x12\x1a\n\x12rx_fragment_frames\x18\x06 \x01(\x04\x12\x1b\n\x13rx_ieee8021q_frames\x18\x07 \x01(\x04\x12\x15\n\rrx_crc_errors\x18\x08 \x01(\x04\x12\x17\n\x0frx_block_errors\x18\t \x01(\x04\x12\x19\n\x11rx_carrier_errors\x18\n \x01(\x04\x12\x19\n\x11rx_interrupted_tx\x18\x0b \x01(\x04\x12\x19\n\x11rx_late_collision\x18\x0c \x01(\x04\x12\x18\n\x10rx_mac_errors_rx\x18\r \x01(\x04\x12\x1b\n\x13rx_single_collision\x18\x0e \x01(\x04\x12\x17\n\x0frx_symbol_error\x18\x0f \x01(\x04\x12\x1b\n\x13rx_maxsize_exceeded\x18\x10 \x01(\x04\x12\x1e\n\x16out_mac_control_frames\x18\x11 \x01(\x04\x12\x1c\n\x14out_mac_pause_frames\x18\x12 \x01(\x04\x12\x1c\n\x14out_ieee8021q_frames\x18\x13 \x01(\x04\x12\x19\n\x11out_mac_errors_tx\x18\x14 \x01(\x04\x12M\n\x13\x65th_rx_distribution\x18\x15 \x01(\x0b\x32\x30.opi_api.network.v1alpha1.EthernetInDistribution\"\x93\x04\n\rEthernetState\x12\x13\n\x0bmac_address\x18\x01 \x01(\t\x12\x16\n\x0e\x61uto_negotiate\x18\x02 \x01(\x08\x12 \n\x18standalone_link_training\x18\x03 \x01(\x08\x12<\n\x0b\x64uplex_mode\x18\x04 \x01(\x0e\x32\'.opi_api.network.v1alpha1.EthDuplexMode\x12:\n\nport_speed\x18\x05 \x01(\x0e\x32&.opi_api.network.v1alpha1.EthPortSpeed\x12\x1b\n\x13\x65nable_flow_control\x18\x06 \x01(\x08\x12\x36\n\x08\x66\x65\x63_mode\x18\x07 \x01(\x0e\x32$.opi_api.network.v1alpha1.EthFecMode\x12\x16\n\x0ehw_mac_address\x18\x08 \x01(\t\x12G\n\x16negotiated_duplex_mode\x18\t \x01(\x0e\x32\'.opi_api.network.v1alpha1.EthDuplexMode\x12\x45\n\x15negotiated_port_speed\x18\n \x01(\x0e\x32&.opi_api.network.v1alpha1.EthPortSpeed\x12<\n\x08\x63ounters\x18\x0b \x01(\x0b\x32*.opi_api.network.v1alpha1.EthernetCounters\"\xbf\x01\n\nEthernetIf\x12\x38\n\x06\x63onfig\x18\x01 \x01(\x0b\x32(.opi_api.network.v1alpha1.EthernetConfig\x12\x36\n\x05state\x18\x02 \x01(\x0b\x32\'.opi_api.network.v1alpha1.EthernetState\x12?\n\rswitched_vlan\x18\x03 \x01(\x0b\x32(.opi_api.network.v1alpha1.VlanSwitchedIf*d\n\rEthDuplexMode\x12\x1f\n\x1b\x45TH_DUPLEX_MODE_UNSPECIFIED\x10\x00\x12\x18\n\x14\x45TH_DUPLEX_MODE_FULL\x10\x01\x12\x18\n\x14\x45TH_DUPLEX_MODE_HALF\x10\x02*\xa0\x03\n\x0c\x45thPortSpeed\x12\x1e\n\x1a\x45TH_PORT_SPEED_UNSPECIFIED\x10\x00\x12\x16\n\x12\x45TH_PORT_SPEED_10M\x10\x01\x12\x17\n\x13\x45TH_PORT_SPEED_100M\x10\x02\x12\x15\n\x11\x45TH_PORT_SPEED_1G\x10\x03\x12\x18\n\x14\x45TH_PORT_SPEED_2500M\x10\x04\x12\x15\n\x11\x45TH_PORT_SPEED_5G\x10\x05\x12\x16\n\x12\x45TH_PORT_SPEED_10G\x10\x06\x12\x16\n\x12\x45TH_PORT_SPEED_25G\x10\x07\x12\x16\n\x12\x45TH_PORT_SPEED_40G\x10\x08\x12\x16\n\x12\x45TH_PORT_SPEED_50G\x10\t\x12\x17\n\x13\x45TH_PORT_SPEED_100G\x10\n\x12\x17\n\x13\x45TH_PORT_SPEED_200G\x10\x0b\x12\x17\n\x13\x45TH_PORT_SPEED_400G\x10\x0c\x12\x17\n\x13\x45TH_PORT_SPEED_600G\x10\r\x12\x17\n\x13\x45TH_PORT_SPEED_800G\x10\x0e\x12\x1a\n\x16\x45TH_PORT_SPEED_UNKNOWN\x10\x0f*\xb0\x01\n\nEthFecMode\x12\x1c\n\x18\x45TH_FEC_MODE_UNSPECIFIED\x10\x00\x12\x13\n\x0f\x45TH_FEC_MODE_FC\x10\x01\x12\x16\n\x12\x45TH_FEC_MODE_RS528\x10\x02\x12\x16\n\x12\x45TH_FEC_MODE_RS544\x10\x03\x12$\n ETH_FEC_MODE_RS544_2X_INTERLEAVE\x10\x04\x12\x19\n\x15\x45TH_FEC_MODE_DISABLED\x10\x05\x42y\n\x18opi_api.network.v1alpha1B\x17OpenconfigEthernetProtoP\x01ZBgithub.com/opiproject/opi-api/network/opinetcommon/v1alpha1/gen/gob\x06proto3')

_ETHDUPLEXMODE = DESCRIPTOR.enum_types_by_name['EthDuplexMode']
EthDuplexMode = enum_type_wrapper.EnumTypeWrapper(_ETHDUPLEXMODE)
_ETHPORTSPEED = DESCRIPTOR.enum_types_by_name['EthPortSpeed']
EthPortSpeed = enum_type_wrapper.EnumTypeWrapper(_ETHPORTSPEED)
_ETHFECMODE = DESCRIPTOR.enum_types_by_name['EthFecMode']
EthFecMode = enum_type_wrapper.EnumTypeWrapper(_ETHFECMODE)
ETH_DUPLEX_MODE_UNSPECIFIED = 0
ETH_DUPLEX_MODE_FULL = 1
ETH_DUPLEX_MODE_HALF = 2
ETH_PORT_SPEED_UNSPECIFIED = 0
ETH_PORT_SPEED_10M = 1
ETH_PORT_SPEED_100M = 2
ETH_PORT_SPEED_1G = 3
ETH_PORT_SPEED_2500M = 4
ETH_PORT_SPEED_5G = 5
ETH_PORT_SPEED_10G = 6
ETH_PORT_SPEED_25G = 7
ETH_PORT_SPEED_40G = 8
ETH_PORT_SPEED_50G = 9
ETH_PORT_SPEED_100G = 10
ETH_PORT_SPEED_200G = 11
ETH_PORT_SPEED_400G = 12
ETH_PORT_SPEED_600G = 13
ETH_PORT_SPEED_800G = 14
ETH_PORT_SPEED_UNKNOWN = 15
ETH_FEC_MODE_UNSPECIFIED = 0
ETH_FEC_MODE_FC = 1
ETH_FEC_MODE_RS528 = 2
ETH_FEC_MODE_RS544 = 3
ETH_FEC_MODE_RS544_2X_INTERLEAVE = 4
ETH_FEC_MODE_DISABLED = 5


_ETHERNETCONFIG = DESCRIPTOR.message_types_by_name['EthernetConfig']
_ETHERNETINDISTRIBUTION = DESCRIPTOR.message_types_by_name['EthernetInDistribution']
_ETHERNETCOUNTERS = DESCRIPTOR.message_types_by_name['EthernetCounters']
_ETHERNETSTATE = DESCRIPTOR.message_types_by_name['EthernetState']
_ETHERNETIF = DESCRIPTOR.message_types_by_name['EthernetIf']
EthernetConfig = _reflection.GeneratedProtocolMessageType('EthernetConfig', (_message.Message,), {
  'DESCRIPTOR' : _ETHERNETCONFIG,
  '__module__' : 'openconfig_ethernet_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.v1alpha1.EthernetConfig)
  })
_sym_db.RegisterMessage(EthernetConfig)

EthernetInDistribution = _reflection.GeneratedProtocolMessageType('EthernetInDistribution', (_message.Message,), {
  'DESCRIPTOR' : _ETHERNETINDISTRIBUTION,
  '__module__' : 'openconfig_ethernet_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.v1alpha1.EthernetInDistribution)
  })
_sym_db.RegisterMessage(EthernetInDistribution)

EthernetCounters = _reflection.GeneratedProtocolMessageType('EthernetCounters', (_message.Message,), {
  'DESCRIPTOR' : _ETHERNETCOUNTERS,
  '__module__' : 'openconfig_ethernet_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.v1alpha1.EthernetCounters)
  })
_sym_db.RegisterMessage(EthernetCounters)

EthernetState = _reflection.GeneratedProtocolMessageType('EthernetState', (_message.Message,), {
  'DESCRIPTOR' : _ETHERNETSTATE,
  '__module__' : 'openconfig_ethernet_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.v1alpha1.EthernetState)
  })
_sym_db.RegisterMessage(EthernetState)

EthernetIf = _reflection.GeneratedProtocolMessageType('EthernetIf', (_message.Message,), {
  'DESCRIPTOR' : _ETHERNETIF,
  '__module__' : 'openconfig_ethernet_pb2'
  # @@protoc_insertion_point(class_scope:opi_api.network.v1alpha1.EthernetIf)
  })
_sym_db.RegisterMessage(EthernetIf)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030opi_api.network.v1alpha1B\027OpenconfigEthernetProtoP\001ZBgithub.com/opiproject/opi-api/network/opinetcommon/v1alpha1/gen/go'
  _ETHERNETCONFIG.fields_by_name['mac_address']._options = None
  _ETHERNETCONFIG.fields_by_name['mac_address']._serialized_options = b'\340A\001'
  _ETHERNETCONFIG.fields_by_name['auto_negotiate']._options = None
  _ETHERNETCONFIG.fields_by_name['auto_negotiate']._serialized_options = b'\340A\001'
  _ETHERNETCONFIG.fields_by_name['standalone_link_training']._options = None
  _ETHERNETCONFIG.fields_by_name['standalone_link_training']._serialized_options = b'\340A\001'
  _ETHERNETCONFIG.fields_by_name['duplex_mode']._options = None
  _ETHERNETCONFIG.fields_by_name['duplex_mode']._serialized_options = b'\340A\001'
  _ETHERNETCONFIG.fields_by_name['port_speed']._options = None
  _ETHERNETCONFIG.fields_by_name['port_speed']._serialized_options = b'\340A\001'
  _ETHERNETCONFIG.fields_by_name['enable_flow_control']._options = None
  _ETHERNETCONFIG.fields_by_name['enable_flow_control']._serialized_options = b'\340A\001'
  _ETHERNETCONFIG.fields_by_name['fec_mode']._options = None
  _ETHERNETCONFIG.fields_by_name['fec_mode']._serialized_options = b'\340A\001'
  _ETHDUPLEXMODE._serialized_start=2068
  _ETHDUPLEXMODE._serialized_end=2168
  _ETHPORTSPEED._serialized_start=2171
  _ETHPORTSPEED._serialized_end=2587
  _ETHFECMODE._serialized_start=2590
  _ETHFECMODE._serialized_end=2766
  _ETHERNETCONFIG._serialized_start=112
  _ETHERNETCONFIG._serialized_end=449
  _ETHERNETINDISTRIBUTION._serialized_start=452
  _ETHERNETINDISTRIBUTION._serialized_end=681
  _ETHERNETCOUNTERS._serialized_start=684
  _ETHERNETCOUNTERS._serialized_end=1338
  _ETHERNETSTATE._serialized_start=1341
  _ETHERNETSTATE._serialized_end=1872
  _ETHERNETIF._serialized_start=1875
  _ETHERNETIF._serialized_end=2066
# @@protoc_insertion_point(module_scope)
