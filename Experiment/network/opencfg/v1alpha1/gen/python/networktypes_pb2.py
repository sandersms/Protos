# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: networktypes.proto
# Protobuf Python Version: 4.25.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12networktypes.proto\x12\x1e\x65xper.network.opencfg.v1alpha1\"\x83\x01\n\tIPAddress\x12\x34\n\x02\x61\x66\x18\x01 \x01(\x0e\x32$.exper.network.opencfg.v1alpha1.IpAfR\x02\x61\x66\x12\x19\n\x07v4_addr\x18\x02 \x01(\x07H\x00R\x06v4Addr\x12\x19\n\x07v6_addr\x18\x03 \x01(\x0cH\x00R\x06v6AddrB\n\n\x08v4_or_v6\"[\n\x08IPPrefix\x12=\n\x04\x61\x64\x64r\x18\x01 \x01(\x0b\x32).exper.network.opencfg.v1alpha1.IPAddressR\x04\x61\x64\x64r\x12\x10\n\x03len\x18\x02 \x01(\x05R\x03len\"2\n\nIPv4Prefix\x12\x12\n\x04\x61\x64\x64r\x18\x01 \x01(\x07R\x04\x61\x64\x64r\x12\x10\n\x03len\x18\x02 \x01(\x05R\x03len\"2\n\nIPv6Prefix\x12\x12\n\x04\x61\x64\x64r\x18\x01 \x01(\x0cR\x04\x61\x64\x64r\x12\x10\n\x03len\x18\x02 \x01(\x05R\x03len\"u\n\x08\x45ncapVal\x12\x19\n\x07vlan_id\x18\x01 \x01(\x05H\x00R\x06vlanId\x12\x1b\n\x08mpls_tag\x18\x02 \x01(\x05H\x00R\x07mplsTag\x12\x14\n\x04vnid\x18\x03 \x01(\x05H\x00R\x04vnid\x12\x14\n\x04vsid\x18\x05 \x01(\x05H\x00R\x04vsidB\x05\n\x03val\"\x86\x01\n\x05\x45ncap\x12=\n\x04type\x18\x01 \x01(\x0e\x32).exper.network.opencfg.v1alpha1.EncapTypeR\x04type\x12>\n\x05value\x18\x02 \x01(\x0b\x32(.exper.network.opencfg.v1alpha1.EncapValR\x05value\"C\n\tPortRange\x12\x19\n\x08port_low\x18\x01 \x01(\x05R\x07portLow\x12\x1b\n\tport_high\x18\x02 \x01(\x05R\x08portHigh\"\x85\x01\n\x07IPRange\x12;\n\x03low\x18\x01 \x01(\x0b\x32).exper.network.opencfg.v1alpha1.IPAddressR\x03low\x12=\n\x04high\x18\x02 \x01(\x0b\x32).exper.network.opencfg.v1alpha1.IPAddressR\x04high\"\xab\x01\n\x0c\x41\x64\x64ressRange\x12H\n\nipv4_range\x18\x01 \x01(\x0b\x32\'.exper.network.opencfg.v1alpha1.IPRangeH\x00R\tipv4Range\x12H\n\nipv6_range\x18\x02 \x01(\x0b\x32\'.exper.network.opencfg.v1alpha1.IPRangeH\x00R\tipv6RangeB\x07\n\x05range\"\xb3\x01\n\x07IPEntry\x12\x42\n\x06prefix\x18\x01 \x01(\x0b\x32(.exper.network.opencfg.v1alpha1.IPPrefixH\x00R\x06prefix\x12\x44\n\x05range\x18\x02 \x01(\x0b\x32,.exper.network.opencfg.v1alpha1.AddressRangeH\x00R\x05range\x12\x12\n\x03tag\x18\x03 \x01(\x05H\x00R\x03tagB\n\n\x08ip_entry\"P\n\x06IPList\x12\x46\n\nip_entries\x18\x01 \x03(\x0b\x32\'.exper.network.opencfg.v1alpha1.IPEntryR\tipEntries\"\xa5\x05\n\x0bRuleL3Match\x12\x1d\n\tproto_num\x18\x01 \x01(\x05H\x00R\x08protoNum\x12W\n\x0fproto_wild_card\x18\x02 \x01(\x0e\x32-.exper.network.opencfg.v1alpha1.WildcardMatchH\x00R\rprotoWildCard\x12I\n\nsrc_prefix\x18\x03 \x01(\x0b\x32(.exper.network.opencfg.v1alpha1.IPPrefixH\x01R\tsrcPrefix\x12K\n\tsrc_range\x18\x04 \x01(\x0b\x32,.exper.network.opencfg.v1alpha1.AddressRangeH\x01R\x08srcRange\x12\x19\n\x07src_tag\x18\x05 \x01(\x05H\x01R\x06srcTag\x12H\n\x0bsrc_ip_list\x18\x06 \x01(\x0b\x32&.exper.network.opencfg.v1alpha1.IPListH\x01R\tsrcIpList\x12I\n\ndst_prefix\x18\x07 \x01(\x0b\x32(.exper.network.opencfg.v1alpha1.IPPrefixH\x02R\tdstPrefix\x12K\n\tdst_range\x18\x08 \x01(\x0b\x32,.exper.network.opencfg.v1alpha1.AddressRangeH\x02R\x08\x64stRange\x12\x19\n\x07\x64st_tag\x18\t \x01(\x05H\x02R\x06\x64stTag\x12H\n\x0b\x64st_ip_list\x18\n \x01(\x0b\x32&.exper.network.opencfg.v1alpha1.IPListH\x02R\tdstIpListB\x0c\n\nprotomatchB\n\n\x08srcmatchB\n\n\x08\x64stmatch\"\xad\x01\n\tPortMatch\x12O\n\x0esrc_port_range\x18\x01 \x01(\x0b\x32).exper.network.opencfg.v1alpha1.PortRangeR\x0csrcPortRange\x12O\n\x0e\x64st_port_range\x18\x02 \x01(\x0b\x32).exper.network.opencfg.v1alpha1.PortRangeR\x0c\x64stPortRange\"\xfd\x01\n\tICMPMatch\x12\x14\n\x04type\x18\x01 \x01(\x05H\x00R\x04type\x12T\n\rtype_wildcard\x18\x02 \x01(\x0e\x32-.exper.network.opencfg.v1alpha1.WildcardMatchH\x00R\x0ctypeWildcard\x12\x14\n\x04\x63ode\x18\x03 \x01(\x05H\x01R\x04\x63ode\x12T\n\rcode_wildcard\x18\x04 \x01(\x0e\x32-.exper.network.opencfg.v1alpha1.WildcardMatchH\x01R\x0c\x63odeWildcardB\x0b\n\ttypematchB\x0b\n\tcodematch\"\xb1\x01\n\rPortListMatch\x12O\n\x0esrc_port_range\x18\x01 \x03(\x0b\x32).exper.network.opencfg.v1alpha1.PortRangeR\x0csrcPortRange\x12O\n\x0e\x64st_port_range\x18\x02 \x03(\x0b\x32).exper.network.opencfg.v1alpha1.PortRangeR\x0c\x64stPortRange\"b\n\rICMPMatchList\x12Q\n\x0ficmp_match_list\x18\x01 \x03(\x0b\x32).exper.network.opencfg.v1alpha1.ICMPMatchR\ricmpMatchList\"\xcb\x02\n\x0bRuleL4Match\x12\x41\n\x05ports\x18\x01 \x01(\x0b\x32).exper.network.opencfg.v1alpha1.PortMatchH\x00R\x05ports\x12H\n\ttype_code\x18\x02 \x01(\x0b\x32).exper.network.opencfg.v1alpha1.ICMPMatchH\x00R\x08typeCode\x12L\n\tport_list\x18\x03 \x01(\x0b\x32-.exper.network.opencfg.v1alpha1.PortListMatchH\x00R\x08portList\x12W\n\x0ficmp_match_list\x18\x04 \x01(\x0b\x32-.exper.network.opencfg.v1alpha1.ICMPMatchListH\x00R\ricmpMatchListB\x08\n\x06l4info\"\x9b\x01\n\tRuleMatch\x12\x46\n\x08l3_match\x18\x01 \x01(\x0b\x32+.exper.network.opencfg.v1alpha1.RuleL3MatchR\x07l3Match\x12\x46\n\x08l4_match\x18\x02 \x01(\x0b\x32+.exper.network.opencfg.v1alpha1.RuleL4MatchR\x07l4Match\"\x1c\n\x08HwHandle\x12\x10\n\x03idx\x18\x01 \x01(\x04R\x03idx*r\n\x12SecurityRuleAction\x12\x1d\n\x19SECURITY_RULE_ACTION_NONE\x10\x00\x12\x1e\n\x1aSECURITY_RULE_ACTION_ALLOW\x10\x01\x12\x1d\n\x19SECURITY_RULE_ACTION_DENY\x10\x02*>\n\x04IpAf\x12\x15\n\x11IP_AF_UNSPECIFIED\x10\x00\x12\x0e\n\nIP_AF_INET\x10\x01\x12\x0f\n\x0bIP_AF_INET6\x10\x02*\x87\x01\n\tEncapType\x12\x1a\n\x16\x45NCAP_TYPE_UNSPECIFIED\x10\x00\x12\x14\n\x10\x45NCAP_TYPE_DOT1Q\x10\x01\x12\x1c\n\x18\x45NCAP_TYPE_MPLS_OVER_UDP\x10\x02\x12\x14\n\x10\x45NCAP_TYPE_VXLAN\x10\x03\x12\x14\n\x10\x45NCAP_TYPE_NVGRE\x10\x04*\x81\x01\n\tRouteType\x12\x1a\n\x16ROUTE_TYPE_UNSPECIFIED\x10\x00\x12\x14\n\x10ROUTE_TYPE_OTHER\x10\x01\x12\x15\n\x11ROUTE_TYPE_REJECT\x10\x02\x12\x14\n\x10ROUTE_TYPE_LOCAL\x10\x03\x12\x15\n\x11ROUTE_TYPE_REMOTE\x10\x04*|\n\rRouteProtocol\x12\x1e\n\x1aROUTE_PROTOCOL_UNSPECIFIED\x10\x00\x12\x18\n\x14ROUTE_PROTOCOL_LOCAL\x10\x01\x12\x19\n\x15ROUTE_PROTOCOL_STATIC\x10\x02\x12\x16\n\x12ROUTE_PROTOCOL_BGP\x10\x03*s\n\nAdminState\x12\x1b\n\x17\x41\x44MIN_STATE_UNSPECIFIED\x10\x00\x12\x16\n\x12\x41\x44MIN_STATE_ENABLE\x10\x01\x12\x17\n\x13\x41\x44MIN_STATE_DISABLE\x10\x02\x12\x17\n\x13\x41\x44MIN_STATE_TESTING\x10\x03*V\n\tPolicyDir\x12\x1a\n\x16POLICY_DIR_UNSPECIFIED\x10\x00\x12\x16\n\x12POLICY_DIR_INGRESS\x10\x01\x12\x15\n\x11POLICY_DIR_EGRESS\x10\x02*A\n\rWildcardMatch\x12\x17\n\x13WILDCARD_MATCH_NONE\x10\x00\x12\x17\n\x12WILDCARD_MATCH_ANY\x10\x80\x02\x42y\n\x1e\x65xper.network.opencfg.v1alpha1B\x11NetworkTypesProtoP\x01ZBgithub.com/opiproject/opi-api/network/opinetcommon/v1alpha1/gen/gob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'networktypes_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\036exper.network.opencfg.v1alpha1B\021NetworkTypesProtoP\001ZBgithub.com/opiproject/opi-api/network/opinetcommon/v1alpha1/gen/go'
  _globals['_SECURITYRULEACTION']._serialized_start=3198
  _globals['_SECURITYRULEACTION']._serialized_end=3312
  _globals['_IPAF']._serialized_start=3314
  _globals['_IPAF']._serialized_end=3376
  _globals['_ENCAPTYPE']._serialized_start=3379
  _globals['_ENCAPTYPE']._serialized_end=3514
  _globals['_ROUTETYPE']._serialized_start=3517
  _globals['_ROUTETYPE']._serialized_end=3646
  _globals['_ROUTEPROTOCOL']._serialized_start=3648
  _globals['_ROUTEPROTOCOL']._serialized_end=3772
  _globals['_ADMINSTATE']._serialized_start=3774
  _globals['_ADMINSTATE']._serialized_end=3889
  _globals['_POLICYDIR']._serialized_start=3891
  _globals['_POLICYDIR']._serialized_end=3977
  _globals['_WILDCARDMATCH']._serialized_start=3979
  _globals['_WILDCARDMATCH']._serialized_end=4044
  _globals['_IPADDRESS']._serialized_start=55
  _globals['_IPADDRESS']._serialized_end=186
  _globals['_IPPREFIX']._serialized_start=188
  _globals['_IPPREFIX']._serialized_end=279
  _globals['_IPV4PREFIX']._serialized_start=281
  _globals['_IPV4PREFIX']._serialized_end=331
  _globals['_IPV6PREFIX']._serialized_start=333
  _globals['_IPV6PREFIX']._serialized_end=383
  _globals['_ENCAPVAL']._serialized_start=385
  _globals['_ENCAPVAL']._serialized_end=502
  _globals['_ENCAP']._serialized_start=505
  _globals['_ENCAP']._serialized_end=639
  _globals['_PORTRANGE']._serialized_start=641
  _globals['_PORTRANGE']._serialized_end=708
  _globals['_IPRANGE']._serialized_start=711
  _globals['_IPRANGE']._serialized_end=844
  _globals['_ADDRESSRANGE']._serialized_start=847
  _globals['_ADDRESSRANGE']._serialized_end=1018
  _globals['_IPENTRY']._serialized_start=1021
  _globals['_IPENTRY']._serialized_end=1200
  _globals['_IPLIST']._serialized_start=1202
  _globals['_IPLIST']._serialized_end=1282
  _globals['_RULEL3MATCH']._serialized_start=1285
  _globals['_RULEL3MATCH']._serialized_end=1962
  _globals['_PORTMATCH']._serialized_start=1965
  _globals['_PORTMATCH']._serialized_end=2138
  _globals['_ICMPMATCH']._serialized_start=2141
  _globals['_ICMPMATCH']._serialized_end=2394
  _globals['_PORTLISTMATCH']._serialized_start=2397
  _globals['_PORTLISTMATCH']._serialized_end=2574
  _globals['_ICMPMATCHLIST']._serialized_start=2576
  _globals['_ICMPMATCHLIST']._serialized_end=2674
  _globals['_RULEL4MATCH']._serialized_start=2677
  _globals['_RULEL4MATCH']._serialized_end=3008
  _globals['_RULEMATCH']._serialized_start=3011
  _globals['_RULEMATCH']._serialized_end=3166
  _globals['_HWHANDLE']._serialized_start=3168
  _globals['_HWHANDLE']._serialized_end=3196
# @@protoc_insertion_point(module_scope)
