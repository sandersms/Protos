# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: networkvlan.proto
# Protobuf Python Version: 4.25.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11networkvlan.proto\x12\x1e\x65xper.network.opencfg.v1alpha1\"\xd4\x01\n\x13SwitchedVlanSetting\x12Z\n\x13vlan_interface_mode\x18\x01 \x01(\x0e\x32*.exper.network.opencfg.v1alpha1.VlanIfModeR\x11vlanInterfaceMode\x12\x1f\n\x0bnative_vlan\x18\x02 \x01(\rR\nnativeVlan\x12\x1f\n\x0b\x61\x63\x63\x65ss_vlan\x18\x03 \x01(\rR\naccessVlan\x12\x1f\n\x0btrunk_vlans\x18\x04 \x01(\tR\ntrunkVlans\"\xa8\x01\n\x0eVlanSwitchedIf\x12K\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x33.exper.network.opencfg.v1alpha1.SwitchedVlanSettingR\x06\x63onfig\x12I\n\x05state\x18\x02 \x01(\x0b\x32\x33.exper.network.opencfg.v1alpha1.SwitchedVlanSettingR\x05state\"\xcd\x01\n\x18VlanIngressEgressSetting\x12Y\n\x0fvlanstackaction\x18\x01 \x01(\x0e\x32/.exper.network.opencfg.v1alpha1.VlanStackActionR\x0fvlanstackaction\x12\x17\n\x07vlan_id\x18\x02 \x01(\rR\x06vlanId\x12=\n\x04tpid\x18\x03 \x01(\x0e\x32).exper.network.opencfg.v1alpha1.TpidTypesR\x04tpid\"\xd1\x0b\n\x06VlanIf\x12\x46\n\x05match\x18\x01 \x01(\x0b\x32\x30.exper.network.opencfg.v1alpha1.VlanIf.VlanMatchR\x05match\x12\x61\n\x0eingressmapping\x18\x02 \x01(\x0b\x32\x39.exper.network.opencfg.v1alpha1.VlanIf.VlanIngressMappingR\x0eingressmapping\x12^\n\regressmapping\x18\x03 \x01(\x0b\x32\x38.exper.network.opencfg.v1alpha1.VlanIf.VlanEgressMappingR\regressmapping\x1a\xca\x06\n\tVlanMatch\x12\x61\n\x0csingletagged\x18\x01 \x01(\x0b\x32=.exper.network.opencfg.v1alpha1.VlanIf.VlanMatch.SingleTaggedR\x0csingletagged\x12m\n\x10singletaggedlist\x18\x02 \x01(\x0b\x32\x41.exper.network.opencfg.v1alpha1.VlanIf.VlanMatch.SingleTaggedListR\x10singletaggedlist\x1a\xb0\x02\n\x0cSingleTagged\x12\x65\n\x06\x63onfig\x18\x01 \x01(\x0b\x32M.exper.network.opencfg.v1alpha1.VlanIf.VlanMatch.SingleTagged.SingleTagConfigR\x06\x63onfig\x12\x62\n\x05state\x18\x02 \x01(\x0b\x32L.exper.network.opencfg.v1alpha1.VlanIf.VlanMatch.SingleTagged.SingleTagStateR\x05state\x1a*\n\x0fSingleTagConfig\x12\x17\n\x07vlan_id\x18\x01 \x01(\rR\x06vlanId\x1a)\n\x0eSingleTagState\x12\x17\n\x07vlan_id\x18\x01 \x01(\rR\x06vlanId\x1a\xb7\x02\n\x10SingleTaggedList\x12g\n\x06\x63onfig\x18\x01 \x01(\x0b\x32O.exper.network.opencfg.v1alpha1.VlanIf.VlanMatch.SingleTaggedList.TagListConfigR\x06\x63onfig\x12g\n\x06status\x18\x02 \x01(\x0b\x32O.exper.network.opencfg.v1alpha1.VlanIf.VlanMatch.SingleTaggedList.TagListStatusR\x06status\x1a(\n\rTagListConfig\x12\x17\n\x07vlan_id\x18\x01 \x03(\rR\x06vlanId\x1a\'\n\rTagListStatus\x12\x16\n\x06vlanid\x18\x01 \x03(\rR\x06vlanid\x1a\xb6\x01\n\x12VlanIngressMapping\x12P\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x38.exper.network.opencfg.v1alpha1.VlanIngressEgressSettingR\x06\x63onfig\x12N\n\x05state\x18\x02 \x01(\x0b\x32\x38.exper.network.opencfg.v1alpha1.VlanIngressEgressSettingR\x05state\x1a\xb5\x01\n\x11VlanEgressMapping\x12P\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x38.exper.network.opencfg.v1alpha1.VlanIngressEgressSettingR\x06\x63onfig\x12N\n\x05state\x18\x02 \x01(\x0b\x32\x38.exper.network.opencfg.v1alpha1.VlanIngressEgressSettingR\x05state*\x97\x01\n\tTpidTypes\x12\x1a\n\x16TPID_TYPES_UNSPECIFIED\x10\x00\x12\x15\n\x11TPID_TYPES_0X8100\x10\x01\x12\x15\n\x11TPID_TYPES_0X88A8\x10\x02\x12\x15\n\x11TPID_TYPES_0X9100\x10\x03\x12\x15\n\x11TPID_TYPES_0X9200\x10\x04\x12\x12\n\x0eTPID_TYPES_ANY\x10\x05*\x87\x01\n\x0fVlanStackAction\x12!\n\x1dVLAN_STACK_ACTION_UNSPECIFIED\x10\x00\x12\x1a\n\x16VLAN_STACK_ACTION_PUSH\x10\x01\x12\x19\n\x15VLAN_STACK_ACTION_POP\x10\x02\x12\x1a\n\x16VLAN_STACK_ACTION_SWAP\x10\x03*[\n\nVlanIfMode\x12\x1c\n\x18VLAN_IF_MODE_UNSPECIFIED\x10\x00\x12\x17\n\x13VLAN_IF_MODE_ACCESS\x10\x01\x12\x16\n\x12VLAN_IF_MODE_TRUNK\x10\x02\x42x\n\x1e\x65xper.network.opencfg.v1alpha1B\x10NetworkVlanProtoP\x01ZBgithub.com/opiproject/opi-api/network/opinetcommon/v1alpha1/gen/gob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'networkvlan_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\036exper.network.opencfg.v1alpha1B\020NetworkVlanProtoP\001ZBgithub.com/opiproject/opi-api/network/opinetcommon/v1alpha1/gen/go'
  _globals['_TPIDTYPES']._serialized_start=2140
  _globals['_TPIDTYPES']._serialized_end=2291
  _globals['_VLANSTACKACTION']._serialized_start=2294
  _globals['_VLANSTACKACTION']._serialized_end=2429
  _globals['_VLANIFMODE']._serialized_start=2431
  _globals['_VLANIFMODE']._serialized_end=2522
  _globals['_SWITCHEDVLANSETTING']._serialized_start=54
  _globals['_SWITCHEDVLANSETTING']._serialized_end=266
  _globals['_VLANSWITCHEDIF']._serialized_start=269
  _globals['_VLANSWITCHEDIF']._serialized_end=437
  _globals['_VLANINGRESSEGRESSSETTING']._serialized_start=440
  _globals['_VLANINGRESSEGRESSSETTING']._serialized_end=645
  _globals['_VLANIF']._serialized_start=648
  _globals['_VLANIF']._serialized_end=2137
  _globals['_VLANIF_VLANMATCH']._serialized_start=926
  _globals['_VLANIF_VLANMATCH']._serialized_end=1768
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED']._serialized_start=1150
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED']._serialized_end=1454
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED_SINGLETAGCONFIG']._serialized_start=1369
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED_SINGLETAGCONFIG']._serialized_end=1411
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED_SINGLETAGSTATE']._serialized_start=1413
  _globals['_VLANIF_VLANMATCH_SINGLETAGGED_SINGLETAGSTATE']._serialized_end=1454
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST']._serialized_start=1457
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST']._serialized_end=1768
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST_TAGLISTCONFIG']._serialized_start=1687
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST_TAGLISTCONFIG']._serialized_end=1727
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST_TAGLISTSTATUS']._serialized_start=1729
  _globals['_VLANIF_VLANMATCH_SINGLETAGGEDLIST_TAGLISTSTATUS']._serialized_end=1768
  _globals['_VLANIF_VLANINGRESSMAPPING']._serialized_start=1771
  _globals['_VLANIF_VLANINGRESSMAPPING']._serialized_end=1953
  _globals['_VLANIF_VLANEGRESSMAPPING']._serialized_start=1956
  _globals['_VLANIF_VLANEGRESSMAPPING']._serialized_end=2137
# @@protoc_insertion_point(module_scope)
